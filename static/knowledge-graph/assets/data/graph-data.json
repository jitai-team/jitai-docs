{
  "entities": [
    {
      "name": "后台任务编辑器",
      "type": "Memory",
      "observations": [
        "定时任务支持：支持指定时间和循环周期的定时任务执行",
        "日期字段任务：基于数据表模型中的日期时间字段，按时间表执行任务"
      ]
    },
    {
      "name": "05-生物医药行业案例",
      "type": "Memory",
      "observations": [
        "模板继承：基于制造业通用模板，继承完整的ERP/MES基础架构和标准业务功能",
        "行业特点分析：合规为先、质量至上的严格要求，技术密集型管理需求，复杂供应链协同",
        "扩展功能模块：在通用基础上扩展质量管理、质量追溯、限制运输、配方管理、制剂代号保密、合作商库存管理、有效期预警、供应商准入评级等",
        "合规管理体系：医药行业特有的全流程合规性控制和质量保证体系"
      ]
    },
    {
      "name": "角色权限编辑器",
      "type": "Memory",
      "observations": [
        "集中权限管理：统一管理应用角色成员和权限配置",
        "多层级权限控制：支持数据模型操作权限、门户页面访问权限、页面内组件展示和操作权限",
        "可视化操作：通过可视化界面实现权限的精细化配置和管理"
      ]
    },
    {
      "name": "02-开发工具",
      "type": "Memory",
      "observations": [
        "基于JAAP规范的企业级AI应用开发工具，支持多场景开发需求",
        "智能体可视化开发：让AI智能体通过可视化搭建快速在应用系统中调测成型落地",
        "jit-builder编译打包：支持代码编译、加密混淆、压缩优化和校验码生成",
        "开发流程支撑：从 meta元素编辑到type元素生成，再到业务应用中instance实例创建的完整可视化开发流程",
        "基于JAAP规范的JitAi可视化开发工具（IDEApp），本身是独立的jit app，包含门户Editor、页面Editor、前端组件Editor、数据模型Editor、数据库Editor等完整编辑器套件",
        "双模统一开发：AI化/可视化编排与代码编程等价无损切换，支持AI助手开发源码和纯人工全代码开发，即时保存编译加载生效，大幅降低开发门槛实现高效低成本",
        "可视化管理：解析应用源代码目录，呈现和管理应用的所有元素及其源码，可视化展示元素间关系，统一的查看、添加、编辑、删除操作模式",
        "可任意扩展：与应用平台、业务应用、编程框架完全隔离，可独立扩展，且可在业务层应用中直接扩展可视化开发工具，无需依赖官方IDEApp"
      ]
    },
    {
      "name": "03-运维工具",
      "type": "Memory",
      "observations": [
        "自动化零成本运维：平台一键安装自动升级，应用自动部署更新，实现部署更新自动化零成本",
        "基于JAAP规范的AdminApp，是应用运行平台内置的自动化运维管理平台，提供自动化DevOps工具和分布式部署能力",
        "全生命周期运维：涵盖应用平台管理、运行环境管理、节点管理、应用管理、开发者组织管理五大功能模块，支持桌面端和服务器端浏览器访问",
        "分布式集群运维：支持组织内集群环境的创建删除、应用配置部署、服务器节点管理、分流权重配置，实现大型多应用集群的统一运维管理和多组织协同"
      ]
    },
    {
      "name": "04-汽车零配件行业案例",
      "type": "Memory",
      "observations": [
        "模板继承：基于制造业通用模板，继承完整的ERP/MES基础架构和标准业务功能",
        "行业特点分析：复杂供应商管理、产品质量追溯制度、多样化生产模式、严格法规合规要求",
        "扩展功能模块：在通用基础上扩展重要订单管理、供应商管理、业务材料规划、质量管理、经营报表、BOM管理等行业专用功能",
        "质量追溯体系：汽车行业特有的全链条质量管控和追溯机制"
      ]
    },
    {
      "name": "页面编辑器",
      "type": "Memory",
      "observations": [
        "可视化构建：直接添加和布局组件，构建页面原型",
        "双模式逻辑配置：基础场景支持可视化配置组件事件交互，复杂需求可切换源码模式全代码开发",
        "全链路控制：从界面设计到业务逻辑的完整开发流程覆盖",
        "内置页面类型：框架内置数据管理页面和数据录入页面type及对应编辑器"
      ]
    },
    {
      "name": "表单编辑器",
      "type": "Memory",
      "observations": [
        "数据模型依赖：基于数据模型元素实现数据录入、编辑、查看功能",
        "交互能力封装：封装事件定义、交互反馈、布局排版、数据校验、字段显隐控制等能力",
        "拖拽式开发：通过拖拽操作完成表单实例开发"
      ]
    },
    {
      "name": "运行时对象",
      "type": "Memory",
      "observations": [
        "提供运行时的对象实例和管理机制",
        "为系统运行提供具体的对象实例和管理能力",
        "直接包含Node节点对象和Environ运行环境"
      ]
    },
    {
      "name": "后端事件编辑器",
      "type": "Memory",
      "observations": [
        "事件触发机制：响应系统数据或程序内部变化，在变化前后触发逻辑执行",
        "模型事件：数据表增删改操作前后触发服务函数执行",
        "审批事件：审批节点变更和状态变更时触发服务函数执行",
        "自定义事件：开发者在服务函数中自主声明和触发，提供灵活的事件调度机制实现模块解耦"
      ]
    },
    {
      "name": "01-AI智能体应用",
      "type": "Memory",
      "observations": [
        "专业智能体矩阵：设计助手、销售助手、采购助手、库存助手、财务助手等覆盖企业各业务环节的专业AI智能体",
        "智能客服系统：集成大模型、知识库、多轮对话的企业级客服解决方案",
        "AI出题阅卷系统：集成大模型、知识库、人机协作的教育场景应用，展现复杂业务流程的AI化改造和人智协同机制",
        "AI能力与业务深度融合：通过可视化编排实现AI智能体在具体业务场景中的快速落地和调优"
      ]
    },
    {
      "name": "02-通用企业管理系统",
      "type": "Memory",
      "observations": [
        "CRM客户关系管理：客户档案、销售机会、合同管理、客户服务的完整客户生命周期管理",
        "OA办公自动化：审批流程、文档管理、会议管理、通知公告等企业内部协同办公功能",
        "BI商业智能：数据分析、报表生成、经营决策支持的企业数据洞察平台",
        "标准化快速实现：基于JitAi技术架构的通用企业应用模板，支持快速部署和个性化配置"
      ]
    },
    {
      "name": "前端元素对象",
      "type": "Memory",
      "observations": [
        "ElementDefine对象，描述元素的定义信息",
        "内容与元素e.json内容一致",
        "通过App对象的相关方法获取元素定义",
        "支持按类型、目录、实例等方式获取元素定义"
      ]
    },
    {
      "name": "06-电子制造行业案例",
      "type": "Memory",
      "observations": [
        "模板继承：基于制造业通用模板，继承完整的ERP/MES基础架构和标准业务功能",
        "行业特点分析：需求多元化、生产过程不连续、复杂生产工艺、复杂生产计划与调度管理",
        "扩展功能模块：在通用基础上扩展工艺工序管理、条码领料一码一档、合作商库存管理、生产计划管理、业务材料规划、材料技术规划等",
        "精益生产管理：电子制造特有的工艺标准化、生产透明化、计划智能化体系"
      ]
    },
    {
      "name": "02-应用侧能力表现",
      "type": "Memory",
      "observations": [
        "生产级标准：安全合规、稳定可控、权限精细化管理，简洁结构保障系统长期健壮性",
        "复杂度分级与人智协作：按函数、代理、助理三级支持不同复杂度的应用开发，AI与人共同协作完成任务，AI智能体快速在企业落地",
        "五大场景高效支撑：AI智能体落地、企业业务系统开发、多应用集群构建、应用模板定制、开发工具构建，通过巨型技术组件和深入业务领域的高阶编程框架实现开发高效成本低",
        "应用复用与定制：支持从通用业务应用app到定制业务应用app的灵活转换，实现应用模版的继承复用和个性化定制"
      ]
    },
    {
      "name": "门户编辑器",
      "type": "Memory",
      "observations": [
        "门户访问入口：门户是一组功能页面的访问入口，提供页面导航框架",
        "内置导航框架：框架层内置通用导航框架，开发者只需配置导航菜单无需自主开发",
        "组成结构：由门户配置、导航菜单、导航页面元素三部分组成",
        "导航页面支持：内置左侧导航页面和顶部导航页面，支持自定义导航页面扩展"
      ]
    },
    {
      "name": "01-矩阵型元架构",
      "type": "Memory",
      "observations": [
        "简洁健壮体系：通用可扩展的系统模型，应用层易改动扩展保障中期适应性，底层框架可扩展性保障长期健壮性",
        "矩阵交叉复用：横纵交织形成强大的复用和扩展能力，通过巨型模块封装方法跨应用场景支撑多种开发需求",
        "横向元素族类：按技术领域或业务领域划分（门户、前端功能页、组件、数据模型、数据库等），每个族类包含完整的meta-type-instance三层架构",
        "纵向元素分层：Meta-Type-Instance三层，meta族类元素封装技术标准，type元素封装技术实现，instance元素表达业务逻辑",
        "链式元素关系：门户引用页面、页面引用前端组件、前端组件引用数据模型，形成简单清晰的链式依赖关系，易于数据传递和功能扩展"
      ]
    },
    {
      "name": "01-应用运行平台",
      "type": "Memory",
      "observations": [
        "基于JAAP协议的统一解释型应用运行平台（jitNode），企业级应用的集成化运行环境，采用微内核和双容器架构，平台与应用完全分离，支持任意形态、跨语言、分布式、跨平台、跨多端的高度集成自动化",
        "跨平台容器化管理：提供Windows桌面版、Mac桌面版、docker（Linux）服务器版，一键安装即可拥有所有基础设施，物理环境虚拟化隔离",
        "主动式全生命周期管理：自动按需加载最新应用，涵盖编译打包、发布、部署、更新升级的完整自动化流程，支持应用继承和元素多态复用",
        "分布式集群支持：内置分布式集群能力，通过JitAi运维工具实现本地环境和云端集群的统一管理，支持多应用、多组织的协同运行"
      ]
    },
    {
      "name": "JitAi",
      "type": "Memory",
      "observations": [
        "AI能力组件集，包含大模型、知识库、Agent和助理四个核心模块",
        "为企业级AI应用提供完整支撑：为AI和GUI原生设计，简洁灵活高集成的开发框架",
        "AI智能体落地支撑：通过可视化开发和调测工具，让AI智能体快速在企业数字化系统中落地应用",
        "为企业数字化转型提供AI能力的技术底座，加速AI智能化应用的规模化落地"
      ]
    },
    {
      "name": "AI大模型",
      "type": "Memory",
      "observations": [
        "企业级大模型服务网关，对接各个大模型服务厂商",
        "提供统一的模型调用接口",
        "屏蔽不同大模型厂商的API差异",
        "提供统一的调用标准和错误处理机制",
        "支持业务层按需选择模型与参数",
        "支持负载均衡与故障转移"
      ]
    },
    {
      "name": "aiassistants.NormalType(AI助理)",
      "type": "Memory",
      "observations": [
        "AI应用与用户交互的统一界面，基于可视化编排实现智能路由和多Agent协同",
        "支持可视化编排：通过可视化界面实现路由决策、AI Agent编排、人机交互设计",
        "实现多Agent协同：助理中可编排多个Agent，实现Multi Agent协作",
        "提供智能路由：根据用户意图自动选择合适的Agent处理任务",
        "支持复杂业务逻辑：函数调用、条件分支、多任务执行",
        "一键集成：以不同形态的入口集成到业务系统的各个角落",
        "Type元素fullName：aiassistants.NormalType"
      ]
    },
    {
      "name": "aiagents.ReActType(AIAgent)",
      "type": "Memory",
      "observations": [
        "AI应用的核心执行引擎，基于ReAct架构实现推理与行动的循环决策",
        "负责工具编排：动态组合和调用各种业务工具和服务",
        "全链路状态跟踪：维护对话上下文、任务执行状态和数据流转状态",
        "任务执行：复杂业务逻辑的分解和执行",
        "权限控制：基于用户角色的工具访问权限管理",
        "支持流式回调和会话管理，提供连续对话能力"
      ]
    },
    {
      "name": "rags.NormalType(AI知识库)",
      "type": "Memory",
      "observations": [
        "基于RAG技术的企业知识管理系统，支持多种数据源的智能检索和知识增强",
        "核心功能：知识查询、文档新增、文档删除的完整知识库管理",
        "支持文档分块配置和数据清洗配置，提供灵活的文档处理能力",
        "基于向量数据库的智能语义匹配和检索",
        "实时更新：知识库内容动态同步，保证信息时效性",
        "应用场景：企业内部文档智能问答、产品手册检索、客户服务知识匹配",
        "Type元素fullName：rags.NormalType"
      ]
    },
    {
      "name": "JitAuth",
      "type": "Memory",
      "observations": [
        "JitAi平台的统一身份认证和权限管理框架，基于RBAC模型实现精细化访问控制",
        "支持多种登录方式、企业组织集成和角色权限体系的完整认证授权解决方案",
        "提供请求拦截、权限验证、组织同步等核心安全机制，确保系统安全可控",
        "简化企业级应用的安全集成复杂度，实现统一认证和分级授权的安全管理体系"
      ]
    },
    {
      "name": "JitORM",
      "type": "Memory",
      "observations": [
        "JitAi平台的数据持久化框架，基于对象关系映射实现统一的数据库访问和操作",
        "支持多种数据库后端和灵活的数据模型定义，包含数据表、扩展表、聚合表、对象模型等",
        "提供丰富的数据类型和强大的查询能力，支持Q表达式和TQL查询语言",
        "简化数据库操作和数据模型管理，提供自动建表、字段映射、关系维护等便捷功能"
      ]
    },
    {
      "name": "JitWeb",
      "type": "Memory",
      "observations": [
        "用户界面构建框架，提供门户、页面、组件三级UI架构和完整的前端开发能力",
        "包含主题系统、自定义控件等前端技术组件，支持企业级应用的界面标准化",
        "基于React技术栈实现组件化开发，支持可视化布局设计和代码开发双重模式",
        "降低前端开发门槛，提升UI一致性和开发效率，实现快速原型到生产的无缝转换"
      ]
    },
    {
      "name": "JitService",
      "type": "Memory",
      "observations": [
        "JitAi平台的核心业务服务框架，提供API服务、外部集成、事件处理的完整后端能力",
        "包含业务服务、外部API、标准授权三大核心组件，支撑复杂业务逻辑的实现",
        "基于事件驱动架构实现服务解耦，支持模型事件、工作流事件、自定义事件的统一管理",
        "为上层应用提供标准化的服务接口和集成能力，加速业务功能的快速实现"
      ]
    },
    {
      "name": "JitWorkflow",
      "type": "Memory",
      "observations": [
        "企业级审批流程引擎，提供完整的工作流设计、执行和管理能力",
        "涵盖标准审批流程、审批服务、流程管理、待办中心、发起申请、审批处理等完整工作流生态",
        "支持复杂审批逻辑、代理机制、批量处理、时间限制等企业级工作流特性",
        "简化企业审批业务的实现复杂度，提升组织协同效率和业务处理规范性"
      ]
    },
    {
      "name": "JitTask",
      "type": "Memory",
      "observations": [
        "JitAi平台的后台任务处理框架，为应用提供自动化执行和业务流程支撑",
        "涵盖定时任务、临时任务、日期字段任务三种执行模式和完整的任务服务管理",
        "提升业务自动化水平，减少人工干预，保障关键操作的及时性和可靠性"
      ]
    },
    {
      "name": "JitStorage",
      "type": "Memory",
      "observations": [
        "存储管理组件，提供文件存储和对象存储服务",
        "支持缓存系统和文件模板引擎"
      ]
    },
    {
      "name": "JitMessage",
      "type": "Memory",
      "observations": [
        "企业级消息通知服务框架，提供统一的短信、邮件、推送等多种通知渠道集成",
        "基于Meta-Type设计模式，支持多种第三方消息服务的统一接入和管理",
        "提供完整的错误处理、日志记录和配置管理，确保消息发送的可靠性",
        "简化企业应用中的消息通知集成复杂度，提升用户体验和运维效率"
      ]
    },
    {
      "name": "JitPay",
      "type": "Memory",
      "observations": [
        "JitAi平台的支付处理框架，为应用提供统一的第三方支付集成能力",
        "涵盖主流支付渠道接入、支付流程管理、订单状态跟踪等完整支付生态",
        "采用统一API设计，屏蔽不同支付平台差异，支持PC端和移动端多场景",
        "简化支付集成复杂度，提升支付安全性和用户体验，加速应用商业化进程"
      ]
    },
    {
      "name": "JitI18N",
      "type": "Memory",
      "observations": [
        "国际化组件，支持多语言翻译和本地化管理",
        "JitAi平台的国际化和本地化框架，提供多语言和多地区的应用支持",
        "支持文本翻译、日期时间格式化、数字格式化、货币显示等国际化功能",
        "提供动态语言切换、资源文件管理、翻译缓存机制，支持实时多语言体验",
        "为全球化企业应用提供完整的本地化解决方案，降低跨地区部署的技术复杂度"
      ]
    },
    {
      "name": "JitCommons",
      "type": "Memory",
      "observations": [
        "JitAi平台的底层基础框架，统一管理通用组件和基础设施",
        "整合全局能力、多线程处理、公共模块、基础配置等核心服务",
        "采用模块化设计，实现组件间的松耦合和高复用",
        "降低开发门槛，提升平台一致性和可维护性"
      ]
    },
    {
      "name": "服务函数编辑器",
      "type": "Memory",
      "observations": [
        "Python类实现：服务实例元素基于Python类架构",
        "可视化管理：支持可视化方式管理和编写服务函数",
        "源码模式切换：复杂逻辑可切换到源码模式进行全代码开发"
      ]
    },
    {
      "name": "02-生态价值",
      "type": "Memory",
      "observations": [
        "技术架构在开发效率和生态协作两个方面的价值体现"
      ]
    },
    {
      "name": "表格编辑器",
      "type": "Memory",
      "observations": [
        "数据模型依赖：基于数据模型元素实现数据展示功能",
        "功能特性支持：支持冻结列、列点击、行内编辑、自定义单元格渲染、汇总统计、工具栏按钮、操作列按钮、业务规则等",
        "拖拽式开发：通过拖拽操作完成表格实例开发"
      ]
    },
    {
      "name": "图表编辑器",
      "type": "Memory",
      "observations": [
        "内置图表组件：提供条形图、折线图、饼状图等24种统计图形",
        "自定义样式支持：支持图表样式的自定义配置"
      ]
    },
    {
      "name": "Q表达式",
      "type": "Memory",
      "observations": [
        "Query Expression，构建面向数据模型的查询条件语法",
        "以简洁、直观的字符串方式表达复杂的查询逻辑",
        "支持比较操作符（=、!=、>、>=、<、<=）",
        "支持包含操作符（in、nin）、模糊匹配（like、startswith、endswith）、空值判断（isnull）等"
      ]
    },
    {
      "name": "01-快速入门",
      "type": "Memory",
      "observations": [
        "开发环境安装和配置指导",
        "创建第一个应用的完整流程体验",
        "通过示例项目快速理解框架基本概念"
      ]
    },
    {
      "name": "databases.MySQLType(MySQL)",
      "type": "Memory",
      "observations": [
        "世界最流行的开源关系型数据库，提供完整的ACID支持",
        "适用于高并发Web应用和企业级系统",
        "支持主从复制、集群部署和大数据量处理"
      ]
    },
    {
      "name": "databases.SqliteType(SQLite)",
      "type": "Memory",
      "observations": [
        "轻量级关系型数据库",
        "数据库类型标识：sqlite",
        "Type元素fullName：databases.SqliteType",
        "配置文件包含database路径设置"
      ]
    },
    {
      "name": "databases.PgSqlType(PgSql)",
      "type": "Memory",
      "observations": [
        "高级开源关系型数据库",
        "配置文件包含dbname、host、port、user、password等连接信息",
        "功能强大的开源对象关系型数据库，支持复杂数据类型",
        "擅长复杂查询和数据分析，支持JSON和数组等高级特性",
        "适用于数据仓库、分析系统和需要高度扩展性的企业应用"
      ]
    },
    {
      "name": "databases.OracleType(Oracle)",
      "type": "Memory",
      "observations": [
        "企业级商业关系型数据库",
        "Type元素fullName：databases.OracleType",
        "配置文件包含service_name、host、port、user、password等连接信息"
      ]
    },
    {
      "name": "databases.SqlServerType(SQL Server)",
      "type": "Memory",
      "observations": [
        "微软企业级关系型数据库",
        "Type元素fullName：databases.SqlServerType",
        "配置文件包含database、host、port、user、password等连接信息"
      ]
    },
    {
      "name": "databases.DmdbType(达梦)",
      "type": "Memory",
      "observations": [
        "国产自主可控关系型数据库",
        "Type元素fullName：databases.DmdbType",
        "配置文件包含schema、host、port、user、password等连接信息"
      ]
    },
    {
      "name": "基础字段类型",
      "type": "Memory",
      "observations": [
        "单行文本、多行文本、数字、金额、百分比等基础数据类型",
        "包含富文本、编号、流水号等特殊文本类型",
        "适用于大部分常规业务数据场景",
        "提供标准的输入验证和显示功能",
        "包含8种基础数据类型：单行文本、多行文本、数字、金额、百分比、编号、流水号、富文本",
        "涵盖文本输入、数值计算、自动编号等常用场景"
      ]
    },
    {
      "name": "选择器类型",
      "type": "Memory",
      "observations": [
        "选项组单选/多选、下拉选择、检查框等选择类型",
        "日期时间选择器",
        "支持多种选择交互方式",
        "适用于数据列表、状态选择等场景",
        "包含11种选择交互类型：下拉框、选项组、日期时间、检查框、成员部门选择器",
        "支持单选多选、时间范围、组织架构等多种选择模式"
      ]
    },
    {
      "name": "附件类型",
      "type": "Memory",
      "observations": [
        "文件、图片、手写签名等附件类型",
        "支持文件上传、存储和下载功能",
        "适用于文档管理、图片展示、电子签名等场景",
        "包含3种附件管理类型：附件、图片、手写签名",
        "支持文件上传、图片处理、签名收集等附件管理功能"
      ]
    },
    {
      "name": "01-问题洞察",
      "type": "Memory",
      "observations": [
        "传统系统透明性缺失问题：系统内部结构和行为对外部智能体不可见，无法被动态理解和操作",
        "系统耦合性问题：静态依赖关系导致模块间紧密耦合，缺乏动态组合和灵活扩展能力",
        "技术复杂度处理困难：缺乏巨型模块封装方法，基础设施技术庞杂割裂，AI和开发者疲于应付巨大的技术复杂度，被迫构建大量\"小轮子\"而非基于\"大轮子\"开发",
        "开发工具能力受限：传统可视化开发工具灵活性不足，零代码/低代码平台表达能力受限，系统规模扩大时开发效率急剧下降",
        "架构设计能力不足：传统编程框架未深入覆盖业务领域，多数开发者缺乏设计高复用、易扩展系统架构的能力，随着系统复杂化导致维护效率持续下降",
        "AI应用复杂性问题：企业级AI应用具有业务深度、功能复杂、需要快速迭代的特点，传统开发模式难以应对",
        "开发模式困局：企业级应用个性化需求强烈，标准化产品无法满足，定制化开发成本高昂风险大。传统开发需要大量基础工作，零代码平台遇到复杂需求就卡壳，低代码平台深度定制能力不足，各种技术路径都有明显短板"
      ]
    },
    {
      "name": "特殊字段类型",
      "type": "Memory",
      "observations": [
        "地址、身份证号、车牌号、电话号码等业务特定类型",
        "定位、超链接、子表等复杂功能类型",
        "内置业务验证规则和专用显示组件",
        "适用于特定业务领域的数据处理",
        "包含7种业务特定类型：地址、身份证号、车牌号、手机号、定位、超链接、子表",
        "内置业务验证规则和专用功能，支持复杂数据结构"
      ]
    },
    {
      "name": "数据容器类型",
      "type": "Memory",
      "observations": [
        "字典、列表、映射、单行数据、多行数据等容器类型",
        "不可用于模型字段，主要用于业务逻辑处理",
        "支持复杂数据结构的存储和操作",
        "适用于数据转换、中间结果存储等场景",
        "包含5种数据容器类型：字典、列表、映射、单行数据、多行数据",
        "主要用于业务逻辑处理，支持复杂数据结构的操作和管理"
      ]
    },
    {
      "name": "关联数据类型",
      "type": "Memory",
      "observations": [
        "关联数据、筛选条件等数据关联类型",
        "实现模型间的数据关联和引用",
        "支持外键关系和复杂查询条件",
        "适用于关联查询、数据联动等场景",
        "包含3种数据关联类型：关联数据单选、关联数据多选、筛选条件",
        "实现模型间的数据关联和复杂查询条件构建"
      ]
    },
    {
      "name": "models.NormalType(数据表)",
      "type": "Memory",
      "observations": [
        "最常见的数据模型，每个实例对应数据库中的一张表",
        "对模型字段的变更会自动同步到数据库中",
        "开发人员无需手动维护数据库表",
        "支持所有类型的数据字段定义"
      ]
    },
    {
      "name": "models.ObjectModelType(数据对象模型)",
      "type": "Memory",
      "observations": [
        "当前仅支持全代码方式使用",
        "可类比为DTO（Data Transfer Object）",
        "完全由开发者按需定义，不与数据库关联",
        "在业务逻辑流转中使用，适用于数据传输和中间处理"
      ]
    },
    {
      "name": "models.ExtendType(扩展表)",
      "type": "Memory",
      "observations": [
        "以一个普通数据模型作为基础模型",
        "通过字段关联规则链式地关联（LEFT JOIN）其他数据模型",
        "对被关联模型的字段进行聚合统计（SUM、COUNT、MAX等）",
        "适用于复杂业务查询和数据关联分析",
        "Type元素fullName：models.ExtendType"
      ]
    },
    {
      "name": "models.AggrType(聚合表)",
      "type": "Memory",
      "observations": [
        "用于多数据模型关联的复杂数据分析场景",
        "支持分组汇总（GROUP BY）、追加合并（UNION）、横向连接（JOIN）",
        "三种模式可以嵌套组合使用",
        "适用于数据统计、报表生成等场景",
        "Type元素fullName：models.AggrType"
      ]
    },
    {
      "name": "03-制造业通用模板",
      "type": "Memory",
      "observations": [
        "通用架构基础：ERP/MES完整架构，涵盖大屏看板、经营报表、数字化管理、精益化生产、业财一体化五大核心模块",
        "标准业务功能：HRM人力资源、OA办公、ERP进销存、MES生产四大业务板块，包含客户管理、销售计划、工厂建模、生产管理等基础功能模块",
        "可继承模板：为各制造业细分行业提供可继承的通用基础架构，支持零侵入式扩展和行业定制"
      ]
    },
    {
      "name": "01-背景",
      "type": "Memory",
      "observations": [
        "问题洞察：分析传统系统在AI时代面临的主要挑战",
        "目标：描绘面向AI时代的理想系统架构",
        "规律探索：探索软件技术发展的内在规律",
        "设计原则：确立技术实现应遵循的基本原则",
        "机制设计：建立技术体系的基础设计原理"
      ]
    },
    {
      "name": "前端App对象",
      "type": "Memory",
      "observations": [
        "前端平台API的核心，提供应用级别的属性和方法",
        "可通过this.app在元素内部访问，或getRuntimeApp全局访问",
        "包含appId、name、title等应用基本属性",
        "提供元素获取和操作的相关方法"
      ]
    },
    {
      "name": "审批流程编辑器",
      "type": "Memory",
      "observations": [
        "拖拽式设计：通过图形化画布构建审批流程",
        "企业级逻辑支持：内置规则引擎、动态分支、并行网关、子流程嵌套功能",
        "双模开发模式：标准化场景支持可视化配置，复杂场景支持API接入和代码级规则扩展",
        "实时生效机制：业务规则变更即时生效，自动留存审计轨迹"
      ]
    },
    {
      "name": "后端App对象",
      "type": "Memory",
      "observations": [
        "后端应用管理的核心对象，可直接使用app关键字调用",
        "包含appId、appKey、version、title等丰富的应用属性",
        "包含env、node、code、resource等关联对象",
        "支持初始化数据、环境变量、依赖管理等功能"
      ]
    },
    {
      "name": "AppCode源码管理器",
      "type": "Memory",
      "observations": [
        "应用源码管理器，用于管理和操作应用的源代码文件",
        "仅在应用具有本地源码时可用（即存在app.json文件）",
        "通常用于开发调试场景",
        "支持文件存在性检查、目录判断、文件读写等操作"
      ]
    },
    {
      "name": "AppResource资源管理器",
      "type": "Memory",
      "observations": [
        "应用资源管理器，用于管理和操作应用的已打包资源文件",
        "用于运行时环境，负责从内存中读取应用的打包资源",
        "包括元素资源、公共资源等",
        "支持资源存在性检查、资源读取等操作"
      ]
    },
    {
      "name": "Environ运行环境",
      "type": "Memory",
      "observations": [
        "运行环境对象，用于管理和控制应用的运行环境",
        "在同一个运行环境中，每个AppId只能运行一个版本",
        "包含envId、orgId、title、rootPath等环境属性",
        "支持应用获取、路径管理、部署规则等功能"
      ]
    },
    {
      "name": "Element元素对象",
      "type": "Memory",
      "observations": [
        "元素对象，通过app.getElement(fullName)获取",
        "包含envId、appId、version、define、fullName等元素属性",
        "支持元素文件读取和管理",
        "实现了对执行对象的透明代理，可直接调用执行对象的方法和属性"
      ]
    },
    {
      "name": "筛选器编辑器",
      "type": "Memory",
      "observations": [
        "组件协作模式：与数据展示类组件配合使用，触发筛选事件驱动数据查询",
        "模型筛选器：依赖数据模型，输出特定模型的查询条件",
        "通用筛选器：自由定义查询条件，提供查询条件转换方法适配任意模型"
      ]
    },
    {
      "name": "Node节点对象",
      "type": "Memory",
      "observations": [
        "Node对象对应着当前运行的Jit节点",
        "包含nodeId、startId、nodeType、port、bindIp等节点属性",
        "支持节点配置管理和版本信息",
        "所有属性均为只读属性"
      ]
    },
    {
      "name": "02-定义范式与方法",
      "type": "Memory",
      "observations": [
        "从传统的人机交互转向人智协同的开发和运行模式",
        "以编排式设计为核心的结构化开发方法论",
        "支持多种开发方式并存和协作的统一框架"
      ]
    },
    {
      "name": "05-机制设计",
      "type": "Memory",
      "observations": [
        "自描述机制：系统模块应具备描述自身结构、功能和接口的能力，使其可被外部系统理解",
        "动态加载：系统组件应支持运行时加载和卸载，实现系统的动态性和灵活性",
        "完全解耦：系统模块间应实现低耦合高内聚，支持独立开发、部署和维护",
        "统一机制：通过统一的模块管理机制实现自描述、动态加载和完全解耦的有机统一"
      ]
    },
    {
      "name": "03-能力表现",
      "type": "Memory",
      "observations": [
        "技术体系在开发效率、系统架构、应用实现等方面的核心能力表现",
        "覆盖从技术实现到业务应用的完整能力谱系"
      ]
    },
    {
      "name": "01-技术侧能力表现",
      "type": "Memory",
      "observations": [
        "模块复用：基于统一规范实现系统组件的高度复用和零侵入扩展",
        "解耦扩展：模块间低耦合高内聚，支持动态加载和灵活组合，易于集成易被集成",
        "软件和智件一体化：通过统一的技术架构实现软件系统与AI能力的全面深度融合，易用易开发",
        "代码精简：基于现代编程语言和巨型模块极限封装，降低技术复杂度实现极简开发，在保持完整表达能力前提下大幅提升开发效率",
        "全栈技术支撑：涵盖后端、前端、桌面端、移动端的完整技术栈，自动处理前后端交互调用关系和分布式网络协同",
        "开箱即用能力：框架层提供认证、事务、日志等企业级技术能力，应用层仅需声明业务定义，大幅降低开发量"
      ]
    },
    {
      "name": "01-开发范式",
      "type": "Memory",
      "observations": [
        "双模统一：图形化编排与代码编程的一体化开发体验",
        "人智协同：人类与AI智能体在开发和运行中的深度协作模式，AI和人通过UI共同协作，人通过UI操作干预AI",
        "编排式编程：以结构化定义为主、过程编程为辅的开发方法，框架层和应用层分别定义技术实现和业务逻辑"
      ]
    },
    {
      "name": "02-实现方法",
      "type": "Memory",
      "observations": [
        "零侵入复用：不修改原系统实现模块扩展和复用的技术手段",
        "解释执行：运行时解释执行实现修改即时生效的动态性",
        "多层复用机制：模板继承、组合构建、参数配置的分层复用方式"
      ]
    },
    {
      "name": "07-食品加工行业案例",
      "type": "Memory",
      "observations": [
        "模板继承：基于制造业通用模板，继承完整的ERP/MES基础架构和标准业务功能",
        "行业特点分析：高度定制化需求、复杂工艺流程控制、食品安全追溯要求、项目导向型管理模式",
        "扩展功能模块：在通用基础上扩展质量管理、质量追溯、限制运输、配方管理、制剂代号保密、合作商库存管理、有效期预警等",
        "食品安全体系：食品行业特有的全程安全控制和追溯系统"
      ]
    },
    {
      "name": "08-设备制造行业案例",
      "type": "Memory",
      "observations": [
        "模板继承：基于制造业通用模板，继承完整的ERP/MES基础架构和标准业务功能",
        "行业特点分析：高度定制化产品、复杂装配工艺、项目式生产管理、长周期交付控制",
        "扩展功能模块：在通用基础上扩展项目管理、工艺管理、装配进度跟踪、质量控制、供应商协同、成本核算等",
        "项目化管理：设备制造特有的项目中心化生产组织和资源协调体系"
      ]
    },
    {
      "name": "03-最佳实践",
      "type": "Memory",
      "observations": [
        "元素设计原则和代码质量保障方法",
        "继承复用策略和性能优化技巧",
        "异常处理和元素维护规范"
      ]
    },
    {
      "name": "01-理论层",
      "type": "Memory",
      "observations": [
        "技术体系的理论基础：包括根本理念、方法范式和能力特征三大理论体系",
        "从抽象理念到具体方法再到能力标准的完整理论链条，为整个技术体系提供指导"
      ]
    },
    {
      "name": "02-架构层",
      "type": "Memory",
      "observations": [
        "解决AI时代系统架构挑战，提供可扩展和智能化的架构解决方案",
        "体现技术架构在开发效率和生态协作方面的价值"
      ]
    },
    {
      "name": "数据模型编辑器",
      "type": "Memory",
      "observations": [
        "多种模型支持：内置基础模型、扩展表、聚合表多种数据模型类型",
        "对应编辑器：为各种数据模型提供专用的可视化编辑器"
      ]
    },
    {
      "name": "03-实现层",
      "type": "Memory",
      "observations": [
        "提供系统运行、开发和运维的工具平台",
        "提供完整的应用开发框架和组件体系"
      ]
    },
    {
      "name": "API编辑器",
      "type": "Memory",
      "observations": [
        "API授权管理：内置API授权元素，管理外部应用的API调用权限",
        "权限开放配置：通过勾选操作将应用API对外开放",
        "多语言SDK支持：提供Python、Nodejs、Java等多种语言的调用SDK"
      ]
    },
    {
      "name": "04-综合案例",
      "type": "Memory",
      "observations": [
        "分层递进的案例体系：从通用应用到行业解决方案的完整验证链条",
        "行业深度与技术广度并重：既展现技术架构的通用性，又体现行业适配的专业性",
        "集成完整的开发流程和项目管理经验"
      ]
    },
    {
      "name": "01-应用规范",
      "type": "Memory",
      "observations": [
        "应用目录结构和配置文件标准",
        "应用部署路径规则和元数据定义",
        "应用继承机制：子应用继承父应用的元素和配置，支持应用级大规模复用和个性化定制"
      ]
    },
    {
      "name": "01-数据库支持",
      "type": "Memory",
      "observations": [
        "支持多种主流数据库的统一数据访问层",
        "提供标准化的数据库连接和操作接口",
        "屏蔽不同数据库的实现差异"
      ]
    },
    {
      "name": "运行引擎",
      "type": "Memory",
      "observations": [
        "基于微内核架构和解释型执行模式的应用运行机制",
        "智能路由机制：运行环境路由→应用路由→元素路由的三级路由体系",
        "应用加载流程：URL解析→搜索应用文件夹→加载app.json→构建应用对象→缓存到容器",
        "元素加载机制：解析e.json→搜索type元素→调用load程序→构建实体对象→动态路由调用",
        "按需加载优化：懒加载策略、多层缓存机制，实现高性能运行"
      ]
    },
    {
      "name": "01-开发效率提升",
      "type": "Memory",
      "observations": [
        "代码精简：通过架构优化和分层设计大幅减少代码量",
        "系统复用：基于模块化和统一规范提高复用度",
        "双模开发：可视化编排与代码编程的统一开发体验",
        "效果验证：AI自动化+可视化开发实现降低技术复杂度、极简开发、门槛低效率高成本低"
      ]
    },
    {
      "name": "02-生态协作模式",
      "type": "Memory",
      "observations": [
        "基于JAAP协议的第三方应用发布和集成模式",
        "第三方可以无侵入方式扩展和定制应用功能",
        "支持开源/闭源、免费/付费等多种发布模式",
        "适用于开发工具、业务组件、行业解决方案等可复用模块"
      ]
    },
    {
      "name": "01-工具平台",
      "type": "Memory",
      "observations": [
        "包含应用运行平台、开发工具和运维工具",
        "支撑从开发到运维的完整生命周期"
      ]
    },
    {
      "name": "02-开发框架",
      "type": "Memory",
      "observations": [
        "JitAi平台的核心技术框架层，提供12大专业框架组件的完整开发支撑",
        "涵盖AI智能、认证权限、数据处理、Web前端、服务治理、消息通知、支付集成、任务调度、存储管理、工作流程、国际化、通用工具等完整技术栈",
        "基于JAAP规范实现框架间无缝集成和统一管理，支持企业级应用的快速构建",
        "通过type元素封装技术实现，instance元素表达业务逻辑，实现业务与技术的完全分离"
      ]
    },
    {
      "name": "04-应用层",
      "type": "Memory",
      "observations": [
        "提供从入门到进阶的完整学习路径",
        "包含开发指导、最佳实践和综合案例"
      ]
    },
    {
      "name": "04-设计原则",
      "type": "Memory",
      "observations": [
        "透明可控：系统应具备内在透明性，使智能体能够动态理解、感知和精确控制系统行为",
        "动态适配：系统组件可在运行时被动态组合和配置，实现系统行为的实时适配",
        "产业协同：通过标准化协议实现技术开发者与业务开发者的专业分工，形成\"底层通用技术+上层业务定制\"的产业协作模式",
        "开放封闭原则：通过零侵入的扩展机制实现功能增强和架构演化",
        "复用性原则：实现从大颗粒度到小颗粒度的多层次复用能力，提高开发效率和代码质量"
      ]
    },
    {
      "name": "02-架构原理",
      "type": "Memory",
      "observations": [
        "解决传统系统在AI时代面临的架构挑战和复杂性问题",
        "通过矩阵型元架构和JAAP协议实现系统的高度可扩展性和智能化"
      ]
    },
    {
      "name": "03-规律探索",
      "type": "Memory",
      "observations": [
        "表达能力约束：任何软件开发技术创新都不能以牺牲表达能力为代价。受限的DSL雾以处理复杂业务逻辑，因此无法成为主流技术发展方向",
        "技术演进与封装规律：从汇编语言到高级语言再到开发框架，封装层次递进提升。模块封装从函数、类级别向大颗粒度发展，始终遵循保持表达完整性、提升抽象层次、兼容前代生态的演进原则",
        "复杂度分离原理：业务复杂度无法被简化，而技术复杂度可以简化。技术创新应专注降低技术复杂度，同时保持业务表达的完整性",
        "技术发展现状：过去三十年软件开发技术缺乏质的飞跃，封装粒度和抽象层次提升缓慢，AI时代对巨型技术组件和深度业务框架的需求日益迫切",
        "表达能力约束：软件开发技术面临一个根本矛盾：要么简单易用但功能受限（如零代码），要么功能完整但使用复杂（如传统开发）。零代码平台虽然上手快，但遇到复杂业务就力不从心；传统开发什么都能做，但要花大量时间处理各种技术细节",
        "技术路径效率规律：不同开发技术在处理复杂项目时表现差异很大。零代码平台刚开始很快，越往后越慢，最后卡死；传统开发一开始就很慢，而且越来越慢；只有找到既快又能持续的技术路径才能解决根本问题"
      ]
    },
    {
      "name": "02-目标",
      "type": "Memory",
      "observations": [
        "解释型系统：构建具备自描述能力的系统，实现系统内部透明性，让智能体能够理解和操作，支撑完整技术栈的统一开发运维",
        "AI上下文工程：超越简单的提示词工程，通过系统整体架构为智能体提供丰富、动态的工作上下文",
        "软件和智件一体化：实现软件系统与智能体在架构层面的原生融合，构建企业级应用和AI智能体的统一平台",
        "编排式开发：以结构化定义为主、过程编程为辅的工业化开发范式，通过标准化组件和简化结构来降低复杂度",
        "大规模复用与定制：支持对标品的大规模复用和低成本定制，解决通用化与个性化需求的矛盾",
        "通用系统模型：构建深度覆盖业务系统的高集成度、高复用度、无限扩展的抽象系统模型，让大型系统保持优雅健壮",
        "突破技术路径限制：找到一条既有零代码平台初期效率，又有传统开发完整能力的技术路径，让开发者不用在'简单但受限'和'完整但复杂'之间做痛苦选择"
      ]
    },
    {
      "name": "02-数据类型",
      "type": "Memory",
      "observations": [
        "提供完整的数据类型定义和管理能力",
        "支持从基础到复杂的各种数据类型需求",
        "为数据建模提供丰富的类型选择"
      ]
    },
    {
      "name": "03-数据模型",
      "type": "Memory",
      "observations": [
        "提供完整的数据建模能力",
        "支持从简单到复杂的各种数据模型需求",
        "为业务系统提供灵活的数据架构支撑",
        "内置丰富的数据操作函数：基础CRUD、批量操作、查询统计、导入导出、高级TQL等完整数据处理能力"
      ]
    },
    {
      "name": "02-开发指南",
      "type": "Memory",
      "observations": [
        "本地开发环境详细配置和调试技巧",
        "元素开发的基础知识和规范指导",
        "标准开发工作流程和问题解决方法"
      ]
    },
    {
      "name": "02-JAAP应用协议",
      "type": "Memory",
      "observations": [
        "Jit AI Application Protocol，解释型应用架构协议，定义应用开发和运行的标准规范",
        "跨平台统一标准：支持跨平台、跨语言、跨端的统一应用协议，实现AI动态感知、调用、编排",
        "集成能力支撑：天然支持API暴露及授权机制和外部API调用，实现多应用系统互联互通、集成与被集成，解决应用繁多组织繁多的复杂集成问题",
        "包含应用规范和元素规范两大核心模块"
      ]
    },
    {
      "name": "02-元素规范",
      "type": "Memory",
      "observations": [
        "Meta-Type-Instance三层元素架构设计",
        "统一的目录结构和文件命名规范",
        "元素生命周期管理机制和HTTP调用规范"
      ]
    },
    {
      "name": "04-数据操作",
      "type": "Memory",
      "observations": [
        "提供面向数据模型的完整数据操作能力",
        "包含查询条件构建和数据操作语言",
        "简化复杂数据操作的构建和执行",
        "为数据访问提供标准化的操作接口"
      ]
    },
    {
      "name": "TQL数据操作语言",
      "type": "Memory",
      "observations": [
        "Table Query Language，构建面向数据模型的数据操作语法",
        "查询条件使用Q表达式构建",
        "支持完整的数据查询：基本查询、关联查询、排序分页、聚合查询、联合查询",
        "支持完整的数据操作：插入（Insert）、更新（Update）、删除（Delete）",
        "提供统一的数据访问和操作标准"
      ]
    },
    {
      "name": "门户",
      "type": "Memory",
      "observations": [
        "应用的统一入口和导航框架，管理页面访问和用户体验",
        "提供标准门户、空白门户、SSR门户三种类型",
        "标准门户内置完整导航体系，空白门户提供最小化结构",
        "SSR门户支持服务端渲染和主题定制",
        "自动适配PC和移动端，提供一致的用户体验"
      ]
    },
    {
      "name": "页面",
      "type": "Memory",
      "observations": [
        "业务功能的承载容器，由组件组合构成完整的用户界面",
        "支持可视化编排、全代码开发、数据驱动、文档展示等多种开发模式",
        "内置页面生命周期管理、路由导航、数据状态维护等核心机制",
        "支持权限控制、主题定制、多端适配，满足企业级应用需求",
        "从简单数据展示到复杂交互逻辑，全面覆盖企业应用的界面构建需求",
        "提供六种页面类型：pages.GridPageType(标准页面)、pages.DataManagePageType(数据管理页面)、pages.FormPageType(数据录入页面)、pages.NormalType(全代码页面)、pages.VueType(Vue全代码页面)、pages.MarkdownPageType(Markdown页面)"
      ]
    },
    {
      "name": "组件",
      "type": "Memory",
      "observations": [
        "可复用的UI构建单元，按视图、表单、操作、布局、审批五大类型组织",
        "包含36个组件覆盖企业应用的各种界面需求和交互场景",
        "Table(表格)、Form(表单)、Filter(模型筛选器)、Modal(弹窗)、BlankComponent(全代码组件)为最常用组件",
        "每个组件支持属性配置、样式定制和事件绑定",
        "组件间可通过数据传递和事件通信实现协同工作",
        "支持组件嵌套组合和动态加载，提供灵活的界面构建能力"
      ]
    },
    {
      "name": "themes.NormalType(主题)",
      "type": "Memory",
      "observations": [
        "界面风格和视觉效果的统一管理系统，控制应用整体外观",
        "提供颜色、字体、间距、圆角等视觉元素的全局配置",
        "支持门户和组件的主题定制，确保界面风格一致性",
        "可创建多套主题方案，实现一键切换不同视觉风格",
        "为企业品牌定制和个性化需求提供完整解决方案"
      ]
    },
    {
      "name": "widgets.React(自定义控件)",
      "type": "Memory",
      "observations": [
        "基于React技术栈的自定义组件开发框架",
        "允许开发者使用React创建与业务需求完全匹配的专用组件",
        "支持复杂交互逻辑和高度定制化的界面设计",
        "提供完整的React组件生命周期管理和事件处理机制",
        "通过标准化接口与平台其他组件无缝集成",
        "目前仅支持React技术栈，不支持其他前端框架"
      ]
    },
    {
      "name": "视图类组件",
      "type": "Memory",
      "observations": [
        "数据展示和可视化的核心组件集合，覆盖各种数据呈现需求",
        "包含表格、图表、列表等23种展示组件，支持从简单到复杂的数据可视化",
        "表格和全代码组件为最常用组件，满足大部分数据展示场景",
        "支持数据导入、解析、转换等数据处理功能",
        "提供丰富的交互和定制选项，适应不同业务需求"
      ]
    },
    {
      "name": "表单类组件",
      "type": "Memory",
      "observations": [
        "数据录入和编辑的专用组件，支持各种表单场景",
        "表单组件为最常用组件，提供标准的数据录入界面",
        "批量编辑表单支持多条记录的同时编辑操作",
        "内置数据验证、自动保存、字段联动等智能特性",
        "可配置字段权限和显示规则，满足复杂业务需求"
      ]
    },
    {
      "name": "操作类组件",
      "type": "Memory",
      "observations": [
        "用户交互和数据操作的功能组件，触发各种业务动作",
        "模型筛选器为最常用组件，与数据展示组件协同工作",
        "支持数据筛选、修正、支付等多种操作场景",
        "提供按钮、筛选器等基础交互元素",
        "可配置权限控制和条件显示逻辑"
      ]
    },
    {
      "name": "布局类组件",
      "type": "Memory",
      "observations": [
        "界面结构和内容组织的容器组件，控制页面布局",
        "弹窗为最常用组件，承载对话框和浮层内容",
        "支持标签页、折叠面板等多种内容组织方式",
        "提供子页面容器，实现复杂界面的模块化构建",
        "支持响应式布局和灵活的界面适配"
      ]
    },
    {
      "name": "审批类组件",
      "type": "Memory",
      "observations": [
        "工作流和审批业务的专用组件，支持企业审批流程",
        "发起申请组件用于提交各类审批请求",
        "审批处理组件用于处理待办审批任务",
        "与工作流引擎深度集成，支持复杂审批逻辑",
        "提供审批状态跟踪和流程可视化功能"
      ]
    },
    {
      "name": "components.Table(表格)",
      "type": "Memory",
      "observations": [
        "数据展示和管理的主要组件，支持大数据量处理",
        "提供排序、筛选、分页、导出等完整数据操作功能",
        "支持行内编辑、批量操作、自定义列渲染",
        "内置冻结列、虚拟滚动等性能优化特性"
      ]
    },
    {
      "name": "components.Chart(统计图)",
      "type": "Memory",
      "observations": [
        "数据可视化组件，提供24种图表类型",
        "支持柱状图、折线图、饼图、散点图等常用图表",
        "可配置图表样式、交互行为和数据绑定",
        "支持实时数据更新和图表联动效果"
      ]
    },
    {
      "name": "components.Board(看板)",
      "type": "Memory",
      "observations": [
        "卡片式信息展示组件，适用于看板布局",
        "支持多种卡片样式和内容展示",
        "可配置拖拽排序和自定义布局",
        "适用于仪表板、数据概览等场景"
      ]
    },
    {
      "name": "components.Gallery(画廊)",
      "type": "Memory",
      "observations": [
        "图片和媒体内容展示组件",
        "支持多种显示模式和布局方式",
        "提供图片预览、缩放、下载等功能",
        "支持大数据量图片的懒加载和虚拟滚动"
      ]
    },
    {
      "name": "components.Calendar(日历)",
      "type": "Memory",
      "observations": [
        "日期时间选择和事件管理组件",
        "支持日视图、周视图、月视图多种显示模式",
        "可展示和管理日程安排、任务计划等时间相关数据",
        "支持日期范围选择和时间段标记"
      ]
    },
    {
      "name": "components.Carousel(轮播图)",
      "type": "Memory",
      "observations": [
        "内容轮播展示组件",
        "支持图片、文本、视频等多种内容类型",
        "提供自动轮播、手动控制、指示器等功能",
        "可配置轮播速度、切换效果和显示样式"
      ]
    },
    {
      "name": "components.TimeLine(时间轴)",
      "type": "Memory",
      "observations": [
        "事件时序展示组件",
        "支持时间轴的水平和垂直布局",
        "可展示项目进展、历史事件等时序信息",
        "支持事件详情展示和交互点击"
      ]
    },
    {
      "name": "components.Tree(树形)",
      "type": "Memory",
      "observations": [
        "层次结构数据展示组件，支持无限层级嵌套",
        "提供节点选择、展开折叠、拖拽排序等操作",
        "支持异步加载和大数据量虚拟渲染",
        "可配置节点图标、复选框、右键菜单"
      ]
    },
    {
      "name": "components.List(列表)",
      "type": "Memory",
      "observations": [
        "数据列表展示组件",
        "支持多种列表样式和布局模式",
        "提供列表项选择、搜索、排序等功能",
        "支持虚拟滚动和分页加载"
      ]
    },
    {
      "name": "components.CascadeTree(级联树)",
      "type": "Memory",
      "observations": [
        "支持级联选择的树形结构组件",
        "实现父子节点的级联选择和联动关系",
        "支持多级联动和条件筛选",
        "适用于地区选择、类目分级等场景"
      ]
    },
    {
      "name": "components.Import(导入)",
      "type": "Memory",
      "observations": [
        "数据导入和文件上传组件",
        "支持Excel、CSV等多种文件格式",
        "提供数据校验、错误提示、进度显示",
        "支持批量上传和断点续传功能"
      ]
    },
    {
      "name": "components.ParseData(解析Excel)",
      "type": "Memory",
      "observations": [
        "专用于Excel数据解析和处理的组件",
        "支持复杂Excel表格的解析和数据提取",
        "提供数据清洗、转换、映射等处理功能",
        "支持数据预览和校验反馈"
      ]
    },
    {
      "name": "components.BlankComponent(全代码组件)",
      "type": "Memory",
      "observations": [
        "空白组件模板，支持完全自定义开发",
        "提供最大的开发灵活性，支持任意业务逻辑实现",
        "可作为专用组件的基础模板和起点",
        "适用于特殊业务场景和创新交互设计"
      ]
    },
    {
      "name": "components.GroupTable(分组表)",
      "type": "Memory",
      "observations": [
        "支持数据分组显示和统计的表格组件",
        "提供分组汇总、层级统计、合计等功能",
        "支持多维度分组和动态组合",
        "适用于数据分析和统计报表场景"
      ]
    },
    {
      "name": "components.GanttChart(甘特图)",
      "type": "Memory",
      "observations": [
        "项目进度和时间管理可视化组件",
        "支持任务依赖关系、里程碑、资源分配显示",
        "提供拖拽调整、进度跟踪、时间范围选择",
        "适用于项目管理和生产计划场景"
      ]
    },
    {
      "name": "components.CascadeTable(级联表)",
      "type": "Memory",
      "observations": [
        "支持级联关系的表格组件",
        "实现主从表关联显示和联动更新",
        "支持多级级联和条件筛选",
        "适用于复杂数据关系的展示和管理"
      ]
    },
    {
      "name": "components.CrossTable(交叉表)",
      "type": "Memory",
      "observations": [
        "支持数据透视和交叉分析的表格组件",
        "提供行列交叉、多维分组、聚合计算功能",
        "支持动态维度配置和数据钻取",
        "适用于数据分析和商业智能场景"
      ]
    },
    {
      "name": "components.Transpose(行转列)",
      "type": "Memory",
      "observations": [
        "数据结构转换组件，实现行列互换",
        "支持动态转置和数据重组",
        "提供数据预览和转换规则配置",
        "适用于数据格式转换和报表生成"
      ]
    },
    {
      "name": "shells.BlankType(空白门户)",
      "type": "Memory",
      "observations": [
        "最小化门户实现，提供基础的页面容器和路由框架",
        "不包含内置导航体系，完全由开发者自定义界面结构",
        "适用于高度定制化的应用界面和特殊展示需求",
        "仅支持前端实现，通过shellRender提供自定义渲染逻辑",
        "为需要完全控制界面布局的应用场景提供纯净的门户基础"
      ]
    },
    {
      "name": "shells.DefaultType(标准门户)",
      "type": "Memory",
      "observations": [
        "完整的门户解决方案，内置导航框架和用户界面体系",
        "同时支持PC端和移动端，提供响应式的统一用户体验",
        "包含标准的左侧导航、顶部导航、用户信息展示等完整门户组件",
        "内置权限管理、菜单配置、主题支持等企业级门户功能",
        "适用于标准企业应用，开发者只需配置导航菜单即可快速构建门户"
      ]
    },
    {
      "name": "pages.GridPageType(标准页面)",
      "type": "Memory",
      "observations": [
        "基于可视化编排的页面类型，支持拖拽式组件布局和配置",
        "提供网格布局系统，开发者可通过可视化界面快速构建页面",
        "内置页面生命周期管理和数据状态维护机制",
        "支持前后端分离架构，同时提供前端和后端逻辑支持",
        "适用于大多数企业应用页面，平衡了开发效率和灵活性"
      ]
    },
    {
      "name": "shells.SSRType(SSR门户)",
      "type": "Memory",
      "observations": [
        "支持服务端渲染的门户类型，提升首屏加载性能和SEO友好性",
        "采用前后端分离架构，backend目录处理服务端逻辑，frontend目录处理客户端逻辑",
        "内置主题系统，支持多套视觉方案和动态主题切换",
        "适用于对页面加载速度和搜索引擎优化有较高要求的应用",
        "为公开访问的门户网站和营销页面提供优化的渲染方案"
      ]
    },
    {
      "name": "pages.DataManagePageType(数据管理页面)",
      "type": "Memory",
      "observations": [
        "专用于数据展示和管理的页面类型，内置表格组件和数据操作功能",
        "支持数据的查询、筛选、排序、分页等标准数据管理操作",
        "提供批量操作、数据导出、权限控制等企业级功能",
        "预置了常用的数据表模块和交互模式，开发者无需重复实现",
        "适用于各种数据列表、管理后台、统计报表等场景"
      ]
    },
    {
      "name": "components.Form(表单)",
      "type": "Memory",
      "observations": [
        "数据录入和编辑的核心组件，支持各种表单控件",
        "内置数据验证、自动保存、字段联动等智能特性",
        "支持复杂表单布局和分步表单向导",
        "可配置字段权限和显示规则"
      ]
    },
    {
      "name": "components.EditForm(批量编辑表单)",
      "type": "Memory",
      "observations": [
        "专用于多条记录同时编辑的表单组件",
        "支持批量选择、批量修改、批量验证",
        "提供差异化编辑和关联更新功能",
        "适用于数据维护和批量操作场景"
      ]
    },
    {
      "name": "components.Filter(模型筛选器)",
      "type": "Memory",
      "observations": [
        "与数据展示组件协同工作的筛选组件",
        "支持基于数据模型的智能筛选条件生成",
        "提供多维度筛选和复杂条件组合",
        "支持筛选条件的保存和复用"
      ]
    },
    {
      "name": "components.Button(按钮)",
      "type": "Memory",
      "observations": [
        "基础交互组件，触发各种操作和事件",
        "支持多种按钮样式和状态显示",
        "可配置权限控制和条件显示",
        "支持异步操作和加载状态反馈"
      ]
    },
    {
      "name": "components.DataCheck(数据修正)",
      "type": "Memory",
      "observations": [
        "数据质量检查和错误修正组件",
        "提供数据一致性检查和异常值检测",
        "支持自动修正和手动确认模式",
        "适用于数据清洗和质量管理场景"
      ]
    },
    {
      "name": "components.GenericFilter(通用筛选器)",
      "type": "Memory",
      "observations": [
        "自由定义查询条件的通用筛选组件",
        "支持复杂逻辑表达式和多层嵌套条件",
        "提供查询条件转换方法适配任意模型",
        "适用于高级查询和专业数据分析"
      ]
    },
    {
      "name": "components.Payment(支付)",
      "type": "Memory",
      "observations": [
        "支付流程和金额处理组件",
        "支持多种支付方式和渠道接入",
        "提供支付状态跟踪和结果反馈",
        "内置支付安全和风控机制"
      ]
    },
    {
      "name": "components.Modal(弹窗)",
      "type": "Memory",
      "observations": [
        "弹窗容器组件，承载对话框和浮层内容",
        "支持模态和非模态两种显示模式",
        "可嵌套其他组件构建复杂弹窗界面",
        "内置拖拽、缩放、层级管理等交互能力"
      ]
    },
    {
      "name": "components.Tab(标签页)",
      "type": "Memory",
      "observations": [
        "多页面内容切换组件",
        "支持页签动态添加、删除、排序",
        "提供页签内容懒加载和缓存机制",
        "可配置页签样式和位置布局"
      ]
    },
    {
      "name": "components.Collapse(折叠面板)",
      "type": "Memory",
      "observations": [
        "可展开收起的内容容器组件",
        "支持单个和多个面板的嵌套组合",
        "提供展开折叠状态的持久化保存",
        "适用于内容分类组织和空间优化"
      ]
    },
    {
      "name": "components.Container(子页面)",
      "type": "Memory",
      "observations": [
        "子页面容器组件，实现复杂界面的模块化构建",
        "支持子页面的动态加载和组件传参",
        "提供父子页面的数据通信机制",
        "适用于大型应用的页面分割和模块化"
      ]
    },
    {
      "name": "components.Apply(发起申请)",
      "type": "Memory",
      "observations": [
        "工作流申请发起组件",
        "支持多种审批流程和申请类型",
        "提供表单填写、附件上传、提交验证",
        "支持申请状态跟踪和撤回操作"
      ]
    },
    {
      "name": "components.TaskHandle(审批处理)",
      "type": "Memory",
      "observations": [
        "审批任务处理组件",
        "支持审批意见、附件查看、流程跳转",
        "提供审批历史记录和意见汇总",
        "支持批量审批和委托代理功能"
      ]
    },
    {
      "name": "pages.FormPageType(数据录入页面)",
      "type": "Memory",
      "observations": [
        "专门为数据录入和编辑场景设计的页面类型",
        "内置表单组件和数据验证机制，支持复杂表单的快速构建",
        "提供表单布局、字段联动、条件显示、分步向导等高级特性",
        "支持表单草稿保存、自动填充、附件上传等便民功能",
        "适用于各种信息申报、数据登记、设置配置等场景"
      ]
    },
    {
      "name": "pages.NormalType(全代码页面)",
      "type": "Memory",
      "observations": [
        "提供最大开发灵活性的页面类型，支持完全自定义的代码开发",
        "默认采用React技术栈，但也可以集成其他前端框架和库",
        "支持TypeScript、JavaScript等多种编程语言和工具链",
        "可以集成任意第三方组件库、工具和技术方案",
        "适用于复杂业务逻辑、高度定制化界面和特殊技术需求"
      ]
    },
    {
      "name": "pages.VueType(Vue全代码页面)",
      "type": "Memory",
      "observations": [
        "基于Vue.js技术栈的全代码页面类型，为熟悉Vue的开发者提供选择",
        "集成Element Plus UI组件库，提供丰富的组件和主题支持",
        "支持Vue 3的组合式API和响应式数据系统",
        "可以使用Vue生态的第三方插件和工具链",
        "适用于需要Vue技术栈的项目或团队技术选型"
      ]
    },
    {
      "name": "pages.MarkdownPageType(Markdown页面)",
      "type": "Memory",
      "observations": [
        "专用于Markdown文档展示的页面类型，支持丰富的文档格式",
        "内置代码高亮、表格渲染、数学公式等高级特性",
        "支持实时预览和文档导航，提供优秀的阅读体验",
        "适用于技术文档、产品说明、帮助手册、知识库等内容展示",
        "为内容创作者提供简洁高效的文档发布方式"
      ]
    },
    {
      "name": "databases.BuiltinsType(内置)",
      "type": "Memory",
      "observations": [
        "内置数据库类型",
        "系统默认提供的数据库支持",
        "平台默认数据库配置，根据部署环境自动选择适合的数据库类型",
        "桌面版使用SQLite，服务器版使用MySQL，无需手动配置",
        "简化开发和部署流程，实现开箱即用的一键部署"
      ]
    },
    {
      "name": "datatypes.Stext(单行文本)",
      "type": "Memory",
      "observations": [
        "最基础的文本输入类型，用于输入短文本信息",
        "支持文本验证、长度限制、格式检查等基础功能",
        "适用于姓名、标题、编码等简短文本字段",
        "Type元素fullName：datatypes.Stext"
      ]
    },
    {
      "name": "datatypes.Ltext(多行文本)",
      "type": "Memory",
      "observations": [
        "多行文本输入类型，支持换行和长文本输入",
        "提供文本计数、自动调整高度等便利功能",
        "适用于描述、备注、说明等长文本内容",
        "Type元素fullName：datatypes.Ltext"
      ]
    },
    {
      "name": "datatypes.Numeric(数字)",
      "type": "Memory",
      "observations": [
        "数值类型，支持整数和小数输入",
        "内置数值验证、精度控制、范围限制功能",
        "支持千分位分隔符显示和数学运算",
        "Type元素fullName：datatypes.Numeric"
      ]
    },
    {
      "name": "datatypes.Money(金额)",
      "type": "Memory",
      "observations": [
        "专用于金额输入的数值类型",
        "自动格式化为货币显示，支持多币种",
        "内置财务精度控制和金额计算功能",
        "Type元素fullName：datatypes.Money"
      ]
    },
    {
      "name": "datatypes.Percent(百分比)",
      "type": "Memory",
      "observations": [
        "百分比数值类型，自动处理百分比计算和显示",
        "支持百分比验证和范围控制",
        "适用于比率、增长率、完成度等场景",
        "Type元素fullName：datatypes.Percent"
      ]
    },
    {
      "name": "datatypes.AutoInt(编号)",
      "type": "Memory",
      "observations": [
        "自动生成的整数编号类型",
        "支持自定义编号规则和格式模板",
        "提供唯一性保证，适用于ID、序号等场景",
        "Type元素fullName：datatypes.AutoInt"
      ]
    },
    {
      "name": "datatypes.Serial(流水号)",
      "type": "Memory",
      "observations": [
        "自动生成的流水号类型，支持复杂编号规则",
        "可配置前缀、后缀、日期格式等模板要素",
        "适用于订单号、单据号等业务编号场景",
        "Type元素fullName：datatypes.Serial"
      ]
    },
    {
      "name": "datatypes.RichText(富文本)",
      "type": "Memory",
      "observations": [
        "支持格式化的富文本编辑器",
        "提供字体、颜色、链接、图片等丰富编辑功能",
        "适用于公告、文档、邮件内容等需要格式化的文本",
        "Type元素fullName：datatypes.RichText"
      ]
    },
    {
      "name": "datatypes.Dropdown(下拉框单选)",
      "type": "Memory",
      "observations": [
        "下拉列表单选组件，提供列表式选择界面",
        "支持选项配置、操作模式、默认值设置",
        "适用于状态选择、类别选择等单选场景"
      ]
    },
    {
      "name": "datatypes.MultiDropdown(下拉框多选)",
      "type": "Memory",
      "observations": [
        "下拉列表多选组件，支持同时选择多个选项",
        "提供已选项显示和快速清除功能",
        "适用于标签选择、多属性设置等多选场景"
      ]
    },
    {
      "name": "datatypes.Radio(选项组单选)",
      "type": "Memory",
      "observations": [
        "单选按钮组件，以列表形式展示所有选项",
        "支持水平和垂直布局，直观显示选项内容",
        "适用于选项较少的单选场景，提供一目了然的选择体验",
        "Type元素fullName：datatypes.Radio"
      ]
    },
    {
      "name": "datatypes.MultiRadio(选项组多选)",
      "type": "Memory",
      "observations": [
        "多选按钮组件，可同时选择多个选项",
        "支持选中状态显示和全选/全不选操作",
        "适用于选项较少的多选场景，直观显示所有可选项",
        "Type元素fullName：datatypes.MultiRadio"
      ]
    },
    {
      "name": "datatypes.Date(日期)",
      "type": "Memory",
      "observations": [
        "日期选择器组件，支持日历式日期选择",
        "提供日期格式化、范围限制、默认值设置",
        "适用于生日、截止日期、事件日期等场景",
        "Type元素fullName：datatypes.Date"
      ]
    },
    {
      "name": "datatypes.Datetime(日期时间)",
      "type": "Memory",
      "observations": [
        "日期时间选择器，支持精确到分钟的时间选择",
        "提供时间格式化、时区支持、快捷选择",
        "适用于预约时间、事件记录、时间戳等场景",
        "Type元素fullName：datatypes.Datetime"
      ]
    },
    {
      "name": "datatypes.Time(时间)",
      "type": "Memory",
      "observations": [
        "时间选择器组件，仅选择时间部分，不包含日期",
        "支持时分秒的精确选择和格式化",
        "适用于上下班时间、闹钟时间等无日期场景",
        "Type元素fullName：datatypes.Time"
      ]
    },
    {
      "name": "datatypes.DateRange(时间范围)",
      "type": "Memory",
      "observations": [
        "时间范围选择器，同时选择开始和结束时间",
        "提供范围验证、快捷选择、时间跨度计算",
        "适用于项目周期、休假时间、活动时间等范围场景"
      ]
    },
    {
      "name": "datatypes.Checkbox(检查框)",
      "type": "Memory",
      "observations": [
        "单个检查框组件，用于布尔值选择",
        "支持选中/未选中状态和默认值设置",
        "适用于同意协议、可选项、开关状态等场景"
      ]
    },
    {
      "name": "datatypes.Address(地址)",
      "type": "Memory",
      "observations": [
        "专用于地址信息输入的复合类型",
        "支持省市区级联选择和地址解析",
        "提供地址验证和格式化功能",
        "Type元素fullName：datatypes.Address"
      ]
    },
    {
      "name": "datatypes.Identify(身份证号)",
      "type": "Memory",
      "observations": [
        "身份证号码专用输入类型",
        "内置身份证号码校验算法和格式验证",
        "可自动解析生日、性别、地区等信息",
        "Type元素fullName：datatypes.Identify"
      ]
    },
    {
      "name": "datatypes.LicensePlate(车牌号)",
      "type": "Memory",
      "observations": [
        "车牌号码专用输入类型",
        "支持国内各种车牌号格式验证",
        "提供车牌号格式化和大小写转换",
        "Type元素fullName：datatypes.LicensePlate"
      ]
    },
    {
      "name": "datatypes.Phone(手机号)",
      "type": "Memory",
      "observations": [
        "手机号码专用输入类型",
        "支持多种手机号格式验证和格式化",
        "可配置国家代码和号码显示样式",
        "Type元素fullName：datatypes.Phone"
      ]
    },
    {
      "name": "datatypes.Position(定位)",
      "type": "Memory",
      "observations": [
        "地理位置信息输入类型",
        "支持GPS坐标获取和地图选点",
        "提供地址反向解析和位置共享功能",
        "Type元素fullName：datatypes.Position"
      ]
    },
    {
      "name": "datatypes.Link(超链接)",
      "type": "Memory",
      "observations": [
        "网站链接专用输入类型",
        "支持URL格式验证和链接预览",
        "提供链接打开方式配置和安全检查"
      ]
    },
    {
      "name": "datatypes.SubTable(子表)",
      "type": "Memory",
      "observations": [
        "子表类型，在主记录中嵌入多条子记录",
        "支持子记录的增删改查和批量操作",
        "提供主子表数据关联和事务一致性保证",
        "Type元素fullName：datatypes.SubTable"
      ]
    },
    {
      "name": "datatypes.File(附件)",
      "type": "Memory",
      "observations": [
        "文件上传和管理的基础类型",
        "支持多种文件格式和大小限制",
        "提供文件预览、下载、删除等管理功能",
        "Type元素fullName：datatypes.File"
      ]
    },
    {
      "name": "datatypes.Image(图片)",
      "type": "Memory",
      "observations": [
        "图片上传和显示的专用类型",
        "支持多种图片格式和自动压缩",
        "提供图片预览、缩放、旋转等显示功能",
        "Type元素fullName：datatypes.Image"
      ]
    },
    {
      "name": "datatypes.Signature(手写签名)",
      "type": "Memory",
      "observations": [
        "手写签名的专用输入类型",
        "支持手写板和触摸屏签名输入",
        "提供签名图像保存和验证功能",
        "Type元素fullName：datatypes.Signature"
      ]
    },
    {
      "name": "datatypes.RelateData(关联数据单选)",
      "type": "Memory",
      "observations": [
        "关联其他数据模型的单选引用类型",
        "支持外键关联和动态数据查询",
        "提供数据筛选、搜索和分页功能",
        "Type元素fullName：datatypes.RelateData"
      ]
    },
    {
      "name": "datatypes.MultiRelateData(关联数据多选)",
      "type": "Memory",
      "observations": [
        "关联其他数据模型的多选引用类型",
        "支持一对多关联关系和多选管理",
        "提供已选项显示和批量操作功能",
        "Type元素fullName：datatypes.MultiRelateData"
      ]
    },
    {
      "name": "datatypes.QFilter(筛选条件)",
      "type": "Memory",
      "observations": [
        "用于构建数据查询条件的专用类型",
        "支持Q表达式语法和复杂条件组合",
        "提供可视化条件构建和验证功能",
        "Type元素fullName：datatypes.QFilter"
      ]
    },
    {
      "name": "datatypes.JitDict(字典)",
      "type": "Memory",
      "observations": [
        "键值对数据结构类型",
        "支持动态键值对的添加、修改、删除",
        "主要用于业务逻辑处理，不可用于模型字段",
        "Type元素fullName：datatypes.JitDict"
      ]
    },
    {
      "name": "datatypes.JitList(列表)",
      "type": "Memory",
      "observations": [
        "数组列表数据结构类型",
        "支持列表元素的序列操作和遍历",
        "主要用于业务逻辑处理，不可用于模型字段",
        "Type元素fullName：datatypes.JitList"
      ]
    },
    {
      "name": "datatypes.JitMap(映射)",
      "type": "Memory",
      "observations": [
        "映射关系数据结构类型",
        "支持复杂的映射关系定义和操作",
        "主要用于业务逻辑处理，不可用于模型字段",
        "Type元素fullName：datatypes.JitMap"
      ]
    },
    {
      "name": "datatypes.RowData(单行数据)",
      "type": "Memory",
      "observations": [
        "单行结构化数据类型",
        "代表一条完整的数据记录对象",
        "主要用于业务逻辑处理，不可用于模型字段",
        "Type元素fullName：datatypes.RowData"
      ]
    },
    {
      "name": "datatypes.RowList(多行数据)",
      "type": "Memory",
      "observations": [
        "多行结构化数据类型",
        "代表多条数据记录的集合对象",
        "主要用于业务逻辑处理，不可用于模型字段",
        "Type元素fullName：datatypes.RowList"
      ]
    },
    {
      "name": "datatypes.Member(成员单选)",
      "type": "Memory",
      "observations": [
        "组织成员单选选择器",
        "支持从组织架构中选择单个成员",
        "提供成员信息展示和权限验证功能"
      ]
    },
    {
      "name": "datatypes.MultiMember(成员多选)",
      "type": "Memory",
      "observations": [
        "组织成员多选选择器",
        "支持从组织架构中选择多个成员",
        "提供成员列表管理和批量操作功能"
      ]
    },
    {
      "name": "datatypes.Dept(部门单选)",
      "type": "Memory",
      "observations": [
        "组织部门单选选择器",
        "支持从组织架构中选择单个部门",
        "提供部门层级显示和权限验证功能"
      ]
    },
    {
      "name": "datatypes.MultiDept(部门多选)",
      "type": "Memory",
      "observations": [
        "组织部门多选选择器",
        "支持从组织架构中选择多个部门",
        "提供部门列表管理和层级关系处理"
      ]
    },
    {
      "name": "llms.OpenAI(OpenAI)",
      "type": "Memory",
      "observations": [
        "全球领先的人工智能研究公司，提供GPT系列大语言模型",
        "支持GPT-4、GPT-3.5-turbo等多种模型选择",
        "提供稳定可靠的API服务和完善的开发者生态"
      ]
    },
    {
      "name": "llms.Gemini(Gemini)",
      "type": "Memory",
      "observations": [
        "谷歌开发的多模态人工智能模型，支持文本、图像和代码理解",
        "擅长复杂推理和多模态交互，在数学和科学领域表现出色",
        "集成谷歌搜索和知识图谱，提供实时信息能力"
      ]
    },
    {
      "name": "llms.Anthropic(Anthropic)",
      "type": "Memory",
      "observations": [
        "专注于AI安全的公司，提供Claude系列大语言模型",
        "采用安全优先的设计理念，在对话安全性和可控性方面表现突出",
        "擅长长文本处理和复杂问题分析，适合企业级应用",
        "Type元素fullName：llms.Anthropic"
      ]
    },
    {
      "name": "llms.Deepseek(Deepseek)",
      "type": "Memory",
      "observations": [
        "国内领先的人工智能公司，专注于大语言模型研发",
        "提供高性能的中文大语言模型，在中文理解和生成方面表现优异",
        "支持代码生成和数学推理，适合技术开发场景"
      ]
    },
    {
      "name": "llms.Siliconflow(Siliconflow)",
      "type": "Memory",
      "observations": [
        "专业的AI推理加速平台，提供高效的大模型推理服务",
        "支持多种主流大模型的统一接入和调用",
        "提供优化的推理性能和成本控制，适合企业级部署",
        "Type元素fullName：llms.Siliconflow"
      ]
    },
    {
      "name": "llms.Bailian(百炼)",
      "type": "Memory",
      "observations": [
        "阿里云推出的企业级大模型服务平台",
        "集成多种国内外主流大模型，提供统一的API服务",
        "专为企业应用设计，提供数据安全和私有化部署选项",
        "Type元素fullName：llms.Bailian"
      ]
    },
    {
      "name": "登录认证",
      "type": "Memory",
      "observations": [
        "身份验证的多种实现方式，覆盖传统账密到现代第三方平台的完整认证体系",
        "包含10种登录认证类型，按基础认证、微信生态、企业平台、国际平台四大类别组织",
        "支持Web端、移动端、小程序等多终端统一身份认证",
        "提供OAuth、扫码、短信验证码等多种认证机制",
        "企业级安全标准，支持单点登录和多因素认证集成"
      ]
    },
    {
      "name": "角色管理",
      "type": "Memory",
      "observations": [
        "基于RBAC模型的角色权限管理体系，实现精细化访问控制",
        "提供标准角色定义框架，支持角色继承和权限组合",
        "内置管理员、开发者、匿名用户等预设角色",
        "支持动态权限分配和角色实例化管理",
        "与组织架构深度集成，实现基于组织的权限控制"
      ]
    },
    {
      "name": "企业组织",
      "type": "Memory",
      "observations": [
        "企业级组织架构管理，支持多种企业平台的组织结构集成",
        "包含5种企业组织类型，涵盖标准组织、企业微信、钉钉、极态应用等",
        "支持组织架构同步、部门管理、人员权限继承",
        "提供统一的组织API和第三方平台适配器",
        "实现跨平台的企业身份和组织信息统一管理"
      ]
    },
    {
      "name": "请求拦截器",
      "type": "Memory",
      "observations": [
        "基于拦截器模式的请求处理组件，提供认证和数据解析能力",
        "包含身份认证拦截器和XML解析拦截器两种类型",
        "支持请求链路上的身份验证和权限检查",
        "提供多种数据格式的解析和转换能力",
        "与认证流程深度集成，实现自动化的安全控制"
      ]
    },
    {
      "name": "auths.loginTypes.PasswordType(账号密码登录)",
      "type": "Memory",
      "observations": [
        "传统的用户名和密码认证方式",
        "支持密码加密存储和安全验证",
        "提供登录失败锁定和密码策略管理",
        "Type元素fullName：auths.loginTypes.PasswordType"
      ]
    },
    {
      "name": "auths.loginTypes.PhoneType(手机号登录)",
      "type": "Memory",
      "observations": [
        "基于手机号的认证方式，通过短信验证码登录",
        "支持国内外手机号格式验证",
        "内置验证码发送和验证机制"
      ]
    },
    {
      "name": "auths.loginTypes.WeChatType(微信登录)",
      "type": "Memory",
      "observations": [
        "微信开放平台的OAuth登录认证",
        "支持微信扫码登录和用户信息获取",
        "集成微信用户体系，提供无缝登录体验"
      ]
    },
    {
      "name": "auths.loginTypes.WechatPublicType(微信公众号登录)",
      "type": "Memory",
      "observations": [
        "面向微信公众号用户的认证方式",
        "支持公众号内网页授权登录",
        "集成微信公众号生态，实现一键登录",
        "Type元素fullName：auths.loginTypes.WechatPublicType"
      ]
    },
    {
      "name": "auths.loginTypes.WeChatMiniType(微信小程序登录)",
      "type": "Memory",
      "observations": [
        "微信小程序专用的认证方式",
        "支持小程序授权登录和用户信息获取",
        "与微信小程序生态深度集成",
        "Type元素fullName：auths.loginTypes.WeChatMiniType"
      ]
    },
    {
      "name": "auths.loginTypes.DDInnerType(钉钉自建扫码登录)",
      "type": "Memory",
      "observations": [
        "钉钉企业内部应用的扫码登录方式",
        "支持钉钉工作台扫码授权和员工信息同步",
        "集成钉钉组织架构，实现企业级身份认证"
      ]
    },
    {
      "name": "auths.loginTypes.QywxInnerType(企业微信自建扫码登录)",
      "type": "Memory",
      "observations": [
        "企业微信自建应用的扫码登录方式",
        "支持企业微信工作台扫码授权",
        "集成企业微信组织架构和员工信息"
      ]
    },
    {
      "name": "auths.loginTypes.QywxProxyType(企业微信代开发登录)",
      "type": "Memory",
      "observations": [
        "面向企业微信第三方应用的代开发登录方式",
        "支持多企业统一认证和授权管理",
        "适用于SaaS服务商和第三方应用开发"
      ]
    },
    {
      "name": "auths.loginTypes.GitHubType(GitHub登录)",
      "type": "Memory",
      "observations": [
        "GitHub平台的OAuth第三方登录",
        "支持GitHub用户信息和仓库权限获取",
        "适用于开发者工具和技术平台"
      ]
    },
    {
      "name": "auths.loginTypes.GoogleType(谷歌登录)",
      "type": "Memory",
      "observations": [
        "谷歌帐户的OAuth第三方登录",
        "支持谷歌用户信息和服务授权",
        "提供全球化的用户身份认证服务",
        "Type元素fullName：auths.loginTypes.GoogleType"
      ]
    },
    {
      "name": "roles.NormalType(标准角色)",
      "type": "Memory",
      "observations": [
        "基础的角色类型，提供标准的RBAC角色功能",
        "支持角色定义、权限分配和用户绑定",
        "提供继承关系和权限组合能力",
        "与组织架构集成，实现分级授权管理"
      ]
    },
    {
      "name": "corps.NormalType(标准组织)",
      "type": "Memory",
      "observations": [
        "通用的企业组织架构管理类型",
        "支持部门层级、人员管理和组织权限配置",
        "提供统一的组织API和数据管理接口",
        "适用于中小企业和自建系统场景"
      ]
    },
    {
      "name": "corps.QywxInnerType(企业微信)",
      "type": "Memory",
      "observations": [
        "企业微信组织架构集成类型",
        "支持企业微信通讯录同步和组织信息获取",
        "提供企业微信用户身份验证和权限管理",
        "实现与企业微信生态的深度集成"
      ]
    },
    {
      "name": "corps.DDInnerType(钉钉)",
      "type": "Memory",
      "observations": [
        "钉钉组织架构集成类型",
        "支持钉钉通讯录同步和部门结构获取",
        "提供钉钉用户身份验证和组织权限管理",
        "实现与钉钉工作台的无缝集成"
      ]
    },
    {
      "name": "corps.JitAppType(极态应用)",
      "type": "Memory",
      "observations": [
        "极态平台内部的组织架构管理类型",
        "支持极态平台组织信息和用户管理",
        "提供平台级的组织权限和身份管理",
        "实现跨应用的统一身份认证"
      ]
    },
    {
      "name": "corps.QywxProxyType(企业微信代开发)",
      "type": "Memory",
      "observations": [
        "企业微信第三方应用的组织集成类型",
        "支持多企业组织管理和跨企业授权",
        "提供SaaS服务商所需的组织适配能力",
        "实现企业微信代开发模式下的组织管理"
      ]
    },
    {
      "name": "interceptors.Auths(身份认证拦截器)",
      "type": "Memory",
      "observations": [
        "基于拦截器模式的身份认证组件",
        "在请求处理链路中提供自动身份验证",
        "支持多种认证方式的统一拦截和处理",
        "提供权限检查和访问控制功能",
        "Type元素fullName：interceptors.Auths"
      ]
    },
    {
      "name": "externalAPIs.NormalType(外部API)",
      "type": "Memory",
      "observations": [
        "通用的外部API集成Type，为第三方服务提供统一的集成框架",
        "支持HTTP请求配置、数据格式转换和响应处理",
        "提供错误处理、重试机制和超时管理，确保外部调用稳定性",
        "支持多种外部服务的适配和配置，实现灵活的集成能力"
      ]
    },
    {
      "name": "externalAPIs.OCRApi(OCR)",
      "type": "Memory",
      "observations": [
        "OCR(光学字符识别)能力的外部API集成服务实例元素",
        "支持图片文字的自动识别和提取，提供结构化数据输出",
        "集成主流OCR服务提供商，支持多种语言和文字类型",
        "提供高精度的文字识别和版面分析能力，支持表格、证件等专业场景",
        "实例元素fullName：externalAPIs.OCRApi"
      ]
    },
    {
      "name": "storages.Meta(存储)",
      "type": "Memory",
      "observations": [
        "多种存储后端的统一管理框架，支持本地和云端存储的无缝切换",
        "包含5种存储类型：磁盘存储、阿里云OSS、七牛云、MinIO、EOS存储",
        "提供统一的存储API接口，屏蔽不同存储服务的差异",
        "支持存储配置的动态切换和负载均衡",
        "确保文件上传、下载、管理的高可用性和扩展性"
      ]
    },
    {
      "name": "fileTmpls.Meta(文件模板)",
      "type": "Memory",
      "observations": [
        "Office文档模板的管理和处理框架，支持动态文档生成",
        "包含Word模板和Excel模板两种主要文档类型",
        "提供模板变量替换、动态内容填充功能",
        "支持复杂表格、图表、格式的模板化处理",
        "实现文档的批量生成和自动化处理能力"
      ]
    },
    {
      "name": "services.NormalType(业务服务)",
      "type": "Memory",
      "observations": [
        "后端业务服务的标准Type定义，为各种业务功能提供统一的服务框架",
        "支持自定义函数列表定义，包含参数类型、返回类型和函数描述",
        "提供后端入口点配置和端点管理能力",
        "实现具体服务实例的统一管理和调用机制"
      ]
    },
    {
      "name": "events.WorkflowType(审批事件)",
      "type": "Memory",
      "observations": [
        "专用于审批流程的事件处理Type，支持审批节点和状态变化事件",
        "与工作流引擎深度集成，支持审批节点的自动化处理",
        "支持审批事件的监听和触发，实现审批流程的事件驱动",
        "提供详细的文档和集成指南，便于审批业务的快速实现"
      ]
    },
    {
      "name": "events.NormalType(自定义事件)",
      "type": "Memory",
      "observations": [
        "通用的自定义事件处理Type，支持任意业务场景的事件定义",
        "提供灵活的事件模型和触发机制，适应多样化的业务需求",
        "支持事件参数自定义和事件处理逻辑的灵活配置",
        "与业务系统深度集成，实现业务事件的统一管理和分发"
      ]
    },
    {
      "name": "events.ModelType(模型事件)",
      "type": "Memory",
      "observations": [
        "专门用于数据模型操作的事件处理Type，监听模型的CRUD操作",
        "支持模型创建、更新、删除等操作的事件触发和处理",
        "提供数据一致性管理和事务级别的事件处理能力",
        "与JitORM框架集成，实现数据层事件的自动化管理"
      ]
    },
    {
      "name": "apiAuths.NormalType(标准授权)",
      "type": "Memory",
      "observations": [
        "标准的API授权管理Type，提供统一的授权验证机制",
        "支持API密钥管理、令牌验证和权限检查",
        "提供完整的授权文档和集成指导，便于第三方开发者集成",
        "与安全系统深度集成，确保授权的安全性和可靠性"
      ]
    },
    {
      "name": "caches.Meta(缓存)",
      "type": "Memory",
      "observations": [
        "多种缓存后端的统一管理框架，提供高性能数据缓存能力",
        "包含4种缓存类型：Redis、SQLite、内置缓存、TongRDS缓存",
        "支持分布式缓存和本地缓存的混合部署",
        "提供缓存策略配置和过期管理机制",
        "确保系统性能优化和数据访问加速"
      ]
    },
    {
      "name": "services.UtilsServices(工具服务)",
      "type": "Memory",
      "observations": [
        "综合性工具服务实例元素，提供数据导出、附件生成、批量导入等常用功能",
        "支持Excel数据导出的异步执行，导出完成后自动发送消息通知",
        "提供附件生成和批量附件处理能力，支持多种文件格式",
        "支持Excel文件的批量导入功能，提供数据验证和错误处理"
      ]
    },
    {
      "name": "services.TpMsgSvc(三方消息通知服务)",
      "type": "Memory",
      "observations": [
        "第三方消息通知系统实例元素，提供统一的消息发送和管理服务",
        "支持自定义消息发送、消息列表查询和未读数量统计",
        "提供消息状态管理，支持单条和批量消息标记为已读",
        "支持多种消息类型和接收者配置，实现精准消息推送"
      ]
    },
    {
      "name": "services.DataHandleSvc(数据处理服务)",
      "type": "Memory",
      "observations": [
        "专业的数据处理服务实例元素，提供数据转换、映射和查询功能",
        "支持单行和多行数据的转换，基于映射关系实现数据格式变换",
        "提供筛选条件转换功能，支持复杂查询条件的模型间转换",
        "集成TQL数据集功能，提供高级数据查询和分析能力",
        "实例元素fullName：services.DataHandleSvc"
      ]
    },
    {
      "name": "services.OpenMsgSvc(开放消息服务)",
      "type": "Memory",
      "observations": [
        "开放平台的消息服务实例元素，提供外部系统的消息集成能力",
        "支持多种第三方平台的消息接口集成",
        "提供统一的消息格式和协议转换",
        "实现外部消息的接收、处理和转发机制"
      ]
    },
    {
      "name": "services.ErrCodeSvc(错误码服务)",
      "type": "Memory",
      "observations": [
        "系统错误码的统一管理服务实例元素，提供错误信息的标准化处理",
        "支持错误码的定义、分类和国际化管理",
        "提供错误信息的格式化输出和日志记录",
        "与系统监控和警告系统集成，实现错误的自动化处理",
        "实例元素fullName：services.ErrCodeSvc"
      ]
    },
    {
      "name": "services.DynamicElementSvc(动态元素服务)",
      "type": "Memory",
      "observations": [
        "动态元素的管理和处理服务实例元素，支持运时元素的创建和管理",
        "提供元素的动态创建、配置和生命周期管理",
        "支持动态表单、动态组件等灵活界面元素的生成",
        "与前端渲染引擎集成，实现动态界面的实时生成和更新",
        "实例元素fullName：services.DynamicElementSvc"
      ]
    },
    {
      "name": "services.AuthOapiSvc(认证开放API服务)",
      "type": "Memory",
      "observations": [
        "认证相关的开放API服务实例元素，提供第三方系统的认证集成能力",
        "支持OAuth、JWT等多种认证协议的集成和管理",
        "提供认证信息的验证、解析和转换功能",
        "与内部认证系统集成，实现统一的认证和授权管理"
      ]
    },
    {
      "name": "services.TpProcessSvc(第三方流程待办服务)",
      "type": "Memory",
      "observations": [
        "第三方系统流程待办事项的集成和管理服务实例元素",
        "支持多种第三方流程平台的待办事项推送和同步",
        "提供待办事项的状态管理和处理进度跟踪",
        "实现跨系统的流程协同和统一待办管理",
        "实例元素fullName：services.TpProcessSvc"
      ]
    },
    {
      "name": "storages.DiskType(磁盘存储)",
      "type": "Memory",
      "observations": [
        "本地磁盘存储实例元素，提供基于文件系统的存储服务",
        "支持高速本地文件读写，适用于小型应用和开发环境",
        "提供直接的文件路径访问，无需额外的网络传输成本",
        "适合对数据安全性要求较高的内部系统部署"
      ]
    },
    {
      "name": "storages.OssType(阿里云OSS)",
      "type": "Memory",
      "observations": [
        "阿里云对象存储服务实例元素，提供企业级云存储能力",
        "支持海量数据存储和全球CDN加速，适合大型互联网应用",
        "提供多种存储类型和数据备份策略，确保数据安全",
        "集成阿里云生态，支持访问控制和权限管理",
        "实例元素fullName：storages.OssType"
      ]
    },
    {
      "name": "storages.QiniuType(七牛云存储)",
      "type": "Memory",
      "observations": [
        "七牛云对象存储服务实例元素，提供性价比优异的云存储方案",
        "支持多媒体文件处理和图片视频的自动压缩优化",
        "提供简单易用的API接口和快速集成能力",
        "适合中小企业和创业团队的云存储需求",
        "实例元素fullName：storages.QiniuType"
      ]
    },
    {
      "name": "storages.MinioType(MinIO存储)",
      "type": "Memory",
      "observations": [
        "MinIO对象存储服务实例元素，提供开源的私有云存储解决方案",
        "支持S3兼容API，可轻松替换AWS S3等公有云存储",
        "提供高性能和高可用性，支持数据分片和分布式部署",
        "适合需要数据本地化管理的企业私有云环境"
      ]
    },
    {
      "name": "storages.EosType(EOS存储)",
      "type": "Memory",
      "observations": [
        "EOS对象存储服务实例元素，提供企业级存储解决方案",
        "支持大规模数据存储和高并发访问，适用于企业核心业务",
        "提供专业的数据备份和灾难恢复能力",
        "适合对存储性能和稳定性有极高要求的关键业务系统"
      ]
    },
    {
      "name": "fileTmpls.WordType(Word模板)",
      "type": "Memory",
      "observations": [
        "Word文档模板实例元素，专用于生成和处理Word格式文档",
        "支持复杂文档结构的模板化，包括段落、表格、图像等元素",
        "提供变量替换和动态内容填充，实现个性化文档生成",
        "适用于合同、报告、公文等正式文档的批量生成",
        "实例元素fullName：fileTmpls.WordType"
      ]
    },
    {
      "name": "fileTmpls.ExcelType(Excel模板)",
      "type": "Memory",
      "observations": [
        "Excel电子表格模板实例元素，专用于生成和处理Excel格式文件",
        "支持复杂表格结构、公式计算和图表的模板化处理",
        "提供数据绑定和动态行列生成，实现数据报表的自动化生成",
        "适用于财务报表、数据统计、业务分析等场景",
        "实例元素fullName：fileTmpls.ExcelType"
      ]
    },
    {
      "name": "caches.RedisType(Redis缓存)",
      "type": "Memory",
      "observations": [
        "Redis内存数据库缓存实例元素，提供高性能的内存缓存服务",
        "支持多种数据结构和丰富的数据操作命令",
        "提供持久化、主从复制和集群部署能力",
        "适用于高并发和低延迟要求的互联网应用"
      ]
    },
    {
      "name": "caches.SqliteType(SQLite缓存)",
      "type": "Memory",
      "observations": [
        "SQLite数据库缓存实例元素，提供轻量级的文件缓存解决方案",
        "支持SQL查询和事务处理，无需额外的数据库服务器",
        "提供跨平台兼容性和零配置部署",
        "适用于小型应用和开发测试环境"
      ]
    },
    {
      "name": "caches.BuiltinsType(内置缓存)",
      "type": "Memory",
      "observations": [
        "平台内置缓存实例元素，提供开箱即用的缓存能力",
        "支持内存缓存和简单的数据存储，无需额外配置",
        "提供基本的缓存策略和过期管理",
        "适用于快速原型开发和小型系统部署"
      ]
    },
    {
      "name": "caches.TongRDSType(TongRDS缓存)",
      "type": "Memory",
      "observations": [
        "TongRDS数据库缓存实例元素，提供东方通系列数据库的缓存支持",
        "支持高性能的数据缓存和分布式缓存部署",
        "提供与东方通数据库的原生集成和优化",
        "适用于对国产化数据库有要求的企业级应用",
        "实例元素fullName：caches.TongRDSType"
      ]
    },
    {
      "name": "pays.Meta(支付)",
      "type": "Memory",
      "observations": [
        "支付系统的基础抽象类，定义支付流程的通用框架和接口规范",
        "为各种具体支付方式提供统一的基础架构和核心功能",
        "封装支付订单处理、状态管理、回调处理等通用支付逻辑",
        "支持扩展不同的第三方支付平台，实现支付方式的标准化接入"
      ]
    },
    {
      "name": "pays.WechatPayType(微信支付)",
      "type": "Memory",
      "observations": [
        "继承pays.Meta的微信支付Type元素，实现微信支付的具体业务逻辑",
        "集成微信支付官方API，支持扫码支付、H5支付、小程序支付等多种方式",
        "提供微信生态内的无缝支付体验，支持微信用户的快速支付流程",
        "适用于微信小程序、公众号、APP等微信生态应用场景"
      ]
    },
    {
      "name": "pays.AliPayType(支付宝支付)",
      "type": "Memory",
      "observations": [
        "继承pays.Meta的支付宝支付Type元素，实现支付宝支付的具体业务逻辑",
        "集成支付宝官方API，支持扫码支付、网页支付、APP支付等多种方式",
        "提供支付宝生态内的便捷支付体验，支持花呗、余额宝等支付方式",
        "适用于电商、O2O、生活服务等多种商业应用场景"
      ]
    },
    {
      "name": "services.PaySvc(支付服务)",
      "type": "Memory",
      "observations": [
        "实例元素：支付业务逻辑的核心服务组件，提供完整的支付流程管理功能",
        "包含支付订单创建、支付链接获取、订单状态查询、支付确认、订单列表等五大核心API",
        "支持支付状态实时跟踪和轮询机制，实现PC端和移动端的多场景支付处理",
        "简化上层应用的支付集成复杂度，提供标准化的支付业务接口和统一的订单管理能力"
      ]
    },
    {
      "name": "tasks.NormalType(定时任务)",
      "type": "Memory",
      "observations": [
        "基于时间周期的任务实现，支持年月日时分等多维度重复策略",
        "提供节假日跳过、工作日执行等智能调度功能",
        "适用于数据备份、报表生成、系统维护等定期执行场景"
      ]
    },
    {
      "name": "tasks.TemporaryType(临时任务)",
      "type": "Memory",
      "observations": [
        "一次性执行的任务实现，支持即时创建和快速处理",
        "提供灵活的参数传递和动态执行机制",
        "适用于数据导入、批量操作、临时计算等场景"
      ]
    },
    {
      "name": "tasks.DateFieldType(日期字段任务)",
      "type": "Memory",
      "observations": [
        "基于数据字段日期变化的自动触发任务实现",
        "监控数据模型中的日期字段，智能判断触发条件",
        "适用于合同到期、订单超时、数据过期等时间敏感的业务场景"
      ]
    },
    {
      "name": "services.TaskSvc(任务服务)",
      "type": "Memory",
      "observations": [
        "实例元素：任务操作的API服务层，提供任务全生命周期的控制接口",
        "包含模板管理、任务创建、状态控制、强制终止等核心功能",
        "为上层应用提供便捷的任务集成和管理能力"
      ]
    },
    {
      "name": "workflows.NormalType(标准审批)",
      "type": "Memory",
      "observations": [
        "标准审批流程的Type元素实现，定义企业审批业务的核心逻辑和流程规范",
        "提供审批节点配置、审批人分配、条件分支、并行处理等标准审批能力",
        "支持多种审批模式和复杂审批策略，满足不同业务场景的审批需求",
        "适用于请假申请、费用报销、合同审批等标准化企业审批流程"
      ]
    },
    {
      "name": "services.WorkflowSvc(审批服务)",
      "type": "Memory",
      "observations": [
        "实例元素：审批业务的核心API服务，提供审批全生命周期的接口和操作功能",
        "包含审批发起处理、待办已办查询、代理设置、批量操作、流程配置等30余个核心API",
        "支持代理机制、时间限制、催办提醒、暂存恢复等企业级审批管理特性",
        "为审批应用提供标准化的服务接口和完整的审批业务处理能力"
      ]
    },
    {
      "name": "pages.WorkflowManage(审批流程管理页面)",
      "type": "Memory",
      "observations": [
        "实例元素：审批流程的可视化设计和配置管理界面",
        "提供流程节点设计、审批人配置、条件设置等流程建模功能",
        "支持流程分组管理和配置信息的统一维护",
        "简化审批流程的设计复杂度，实现业务流程的快速建模和部署"
      ]
    },
    {
      "name": "pages.Todo(待办中心)",
      "type": "Memory",
      "observations": [
        "实例元素：审批待办事项的统一管理和处理界面",
        "集中展示待办、已办、抄送等不同状态的审批任务列表",
        "支持批量操作、任务统计、移动端适配等便捷处理功能",
        "提升审批处理效率，确保审批任务的及时响应和统一管理"
      ]
    },
    {
      "name": "pages.Launch(发起审批)",
      "type": "Memory",
      "observations": [
        "实例元素：审批流程的统一发起和启动界面",
        "提供审批类型选择、表单填写、流程预览等发起功能",
        "支持移动端发起和审批流程的智能引导",
        "简化审批发起操作，提升用户发起审批的便捷性和准确性"
      ]
    },
    {
      "name": "pages.Handle(审批处理)",
      "type": "Memory",
      "observations": [
        "实例元素：审批决策的处理和操作执行界面",
        "提供审批通过拒绝、意见填写、签名确认等处理功能",
        "支持移动端处理和审批历史的完整跟踪",
        "确保审批决策的准确执行和审批过程的完整记录"
      ]
    },
    {
      "name": "pages.Apply(发起申请)",
      "type": "Memory",
      "observations": [
        "实例元素：业务申请的发起和提交界面",
        "针对特定业务场景提供专门的申请表单和流程引导",
        "支持移动端申请和申请内容的规范化填写",
        "优化特定申请场景的用户体验和申请效率"
      ]
    },
    {
      "name": "SMS.Meta(短信服务)",
      "type": "Memory",
      "observations": [
        "Meta元素：定义短信通知服务的抽象框架和核心接口规范",
        "封装sendMessage统一方法，支持批量发送、模板参数和扩展配置",
        "为各种第三方短信平台集成提供技术基础和规范约束",
        "支持多平台扩展，目前包含阿里云等主流短信服务商实现"
      ]
    },
    {
      "name": "SMS.Aliyun(阿里云短信)",
      "type": "Memory",
      "observations": [
        "Type元素：基于SMS.Meta实现的具体短信服务集成",
        "集成阿里云SMS API，支持AccessKey认证和签名验证机制",
        "提供完整的错误处理和日志监控，确保消息发送的可靠性",
        "适用于验证码、通知提醒等企业级短信通知场景"
      ]
    },
    {
      "name": "全局组件",
      "type": "Memory",
      "observations": [
        "跨应用边界的全局作用域组件集合",
        "实现数据和状态在不同模块间的共享与同步"
      ]
    },
    {
      "name": "工作线程",
      "type": "Memory",
      "observations": [
        "浏览器多线程计算能力的统一管理",
        "解决主线程阻塞问题，提升用户体验响应性"
      ]
    },
    {
      "name": "公共模块",
      "type": "Memory",
      "observations": [
        "面向前后端开发的通用模块库",
        "消除重复编码，提升开发效率和代码质量"
      ]
    },
    {
      "name": "基础设施",
      "type": "Memory",
      "observations": [
        "平台运行所需的底层支撑服务",
        "保障系统稳定性和可维护性的核心基础"
      ]
    },
    {
      "name": "globals.Meta(全局元素)",
      "type": "Memory",
      "observations": [
        "Meta元素：全局作用域元素的抽象模板和规范约束",
        "定义统一的全局元素接口和行为模式",
        "为具体实现类型提供继承和扩展基础"
      ]
    },
    {
      "name": "globals.AppVar(应用变量)",
      "type": "Memory",
      "observations": [
        "Type元素：基于globals.Meta实现的应用级全局变量管理",
        "提供跨组件的状态共享和数据传递机制",
        "支持变量声明、值设置、数据绑定等核心操作",
        "适用于全局状态管理、用户信息共享等场景"
      ]
    },
    {
      "name": "globals.Sql(SQL公式)",
      "type": "Memory",
      "observations": [
        "Type元素：基于globals.Meta实现的SQL查询和公式计算工具",
        "提供复杂数据查询、聚合计算和动态SQL生成能力",
        "支持参数化查询、结果缓存和性能优化",
        "适用于报表统计、数据分析和复杂业务逻辑处理"
      ]
    },
    {
      "name": "workers.WebWorker(WebWorker)",
      "type": "Memory",
      "observations": [
        "Type元素：浏览器多线程计算能力封装",
        "解决主线程阻塞问题，提升用户界面响应性",
        "适配复杂计算和数据处理场景"
      ]
    },
    {
      "name": "modules.BackendType(后端公共模块)",
      "type": "Memory",
      "observations": [
        "Type元素：后端服务层的通用工具集",
        "聚焦数据持久化、缓存、日志等后端核心能力",
        "统一服务层技术标准，提升后端开发的一致性"
      ]
    },
    {
      "name": "modules.FrontType(前端公共模块)",
      "type": "Memory",
      "observations": [
        "Type元素：前端用户界面层的通用组件库",
        "聚焦DOM操作、事件管理、用户交互等前端核心能力",
        "统一用户体验标准，提升前端开发的一致性"
      ]
    },
    {
      "name": "GlobalVar功能模块",
      "type": "Memory",
      "observations": [
        "全局变量的运行时管理和操作库",
        "实现跨模块的数据状态共享和同步"
      ]
    },
    {
      "name": "Calc功能模块",
      "type": "Memory",
      "observations": [
        "通用数学表达式和公式计算引擎",
        "支撴动态业务规则和数据分析场景"
      ]
    },
    {
      "name": "功能模块集合",
      "type": "Memory",
      "observations": [
        "业务领域的功能模块聚合体",
        "涵盖审批、数据处理、异常管理等业务场景"
      ]
    },
    {
      "name": "枚举定义系统",
      "type": "Memory",
      "observations": [
        "统一的枚举常量定义和管理中心",
        "消除魔法数字，提升代码可读性和维护性"
      ]
    },
    {
      "name": "错误码管理系统",
      "type": "Memory",
      "observations": [
        "全局错误处理和异常监控中心",
        "标准化错误信息和响应策略，降低排错成本"
      ]
    },
    {
      "name": "常量定义系统",
      "type": "Memory",
      "observations": [
        "平台参数和配置常量的集中存储",
        "保持关键参数的稳定性和一致性"
      ]
    },
    {
      "name": "默认配置管理",
      "type": "Memory",
      "observations": [
        "开箱即用的默认配置方案",
        "简化部署流程，降低初始化门槛"
      ]
    }
  ],
  "relations": [
    {
      "source": "02-开发工具",
      "target": "角色权限编辑器",
      "relationType": "包含"
    },
    {
      "source": "03-实现层",
      "target": "04-应用层",
      "relationType": "支撑"
    },
    {
      "source": "02-开发工具",
      "target": "服务函数编辑器",
      "relationType": "包含"
    },
    {
      "source": "03-能力表现",
      "target": "02-应用侧能力表现",
      "relationType": "包含"
    },
    {
      "source": "数据容器类型",
      "target": "datatypes.RowData(单行数据)",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "审批流程编辑器",
      "relationType": "包含"
    },
    {
      "source": "数据容器类型",
      "target": "datatypes.RowList(多行数据)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Datetime(日期时间)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Dept(部门单选)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.MultiDept(部门多选)",
      "relationType": "包含"
    },
    {
      "source": "01-背景",
      "target": "01-问题洞察",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.Money(金额)",
      "relationType": "包含"
    },
    {
      "source": "03-实现层",
      "target": "02-开发框架",
      "relationType": "包含"
    },
    {
      "source": "01-背景",
      "target": "02-目标",
      "relationType": "包含"
    },
    {
      "source": "01-背景",
      "target": "03-规律探索",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.Percent(百分比)",
      "relationType": "包含"
    },
    {
      "source": "02-数据类型",
      "target": "关联数据类型",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "API编辑器",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "门户编辑器",
      "relationType": "包含"
    },
    {
      "source": "JitAi",
      "target": "aiassistants.NormalType(AI助理)",
      "relationType": "包含"
    },
    {
      "source": "前端App对象",
      "target": "前端元素对象",
      "relationType": "包含"
    },
    {
      "source": "02-架构层",
      "target": "03-实现层",
      "relationType": "指导"
    },
    {
      "source": "JitAi",
      "target": "aiagents.ReActType(AIAgent)",
      "relationType": "包含"
    },
    {
      "source": "Environ运行环境",
      "target": "AppResource资源管理器",
      "relationType": "包含"
    },
    {
      "source": "01-背景",
      "target": "04-设计原则",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.AutoInt(编号)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.CrossTable(交叉表)",
      "relationType": "包含"
    },
    {
      "source": "特殊字段类型",
      "target": "datatypes.Address(地址)",
      "relationType": "包含"
    },
    {
      "source": "特殊字段类型",
      "target": "datatypes.Identify(身份证号)",
      "relationType": "包含"
    },
    {
      "source": "特殊字段类型",
      "target": "datatypes.LicensePlate(车牌号)",
      "relationType": "包含"
    },
    {
      "source": "角色管理",
      "target": "roles.NormalType(标准角色)",
      "relationType": "包含"
    },
    {
      "source": "特殊字段类型",
      "target": "datatypes.Phone(手机号)",
      "relationType": "包含"
    },
    {
      "source": "特殊字段类型",
      "target": "datatypes.Position(定位)",
      "relationType": "包含"
    },
    {
      "source": "特殊字段类型",
      "target": "datatypes.Link(超链接)",
      "relationType": "包含"
    },
    {
      "source": "特殊字段类型",
      "target": "datatypes.SubTable(子表)",
      "relationType": "包含"
    },
    {
      "source": "附件类型",
      "target": "datatypes.File(附件)",
      "relationType": "包含"
    },
    {
      "source": "附件类型",
      "target": "datatypes.Image(图片)",
      "relationType": "包含"
    },
    {
      "source": "附件类型",
      "target": "datatypes.Signature(手写签名)",
      "relationType": "包含"
    },
    {
      "source": "JitAi",
      "target": "rags.NormalType(AI知识库)",
      "relationType": "包含"
    },
    {
      "source": "企业组织",
      "target": "corps.NormalType(标准组织)",
      "relationType": "包含"
    },
    {
      "source": "Environ运行环境",
      "target": "后端App对象",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "后台任务编辑器",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "后端事件编辑器",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "01-AI智能体应用",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "02-通用企业管理系统",
      "relationType": "包含"
    },
    {
      "source": "AI大模型",
      "target": "llms.OpenAI(OpenAI)",
      "relationType": "包含"
    },
    {
      "source": "AI大模型",
      "target": "llms.Gemini(Gemini)",
      "relationType": "包含"
    },
    {
      "source": "组件",
      "target": "表单类组件",
      "relationType": "包含"
    },
    {
      "source": "03-数据模型",
      "target": "models.AggrType(聚合表)",
      "relationType": "包含"
    },
    {
      "source": "后端App对象",
      "target": "Element元素对象",
      "relationType": "包含"
    },
    {
      "source": "AI大模型",
      "target": "llms.Anthropic(Anthropic)",
      "relationType": "包含"
    },
    {
      "source": "JitORM",
      "target": "04-数据操作",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.PasswordType(账号密码登录)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.PhoneType(手机号登录)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.WeChatType(微信登录)",
      "relationType": "包含"
    },
    {
      "source": "02-数据类型",
      "target": "数据容器类型",
      "relationType": "包含"
    },
    {
      "source": "AI大模型",
      "target": "llms.Deepseek(Deepseek)",
      "relationType": "包含"
    },
    {
      "source": "AI大模型",
      "target": "llms.Siliconflow(Siliconflow)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Dropdown(下拉框单选)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.QywxInnerType(企业微信自建扫码登录)",
      "relationType": "包含"
    },
    {
      "source": "03-数据模型",
      "target": "models.ObjectModelType(数据对象模型)",
      "relationType": "包含"
    },
    {
      "source": "03-数据模型",
      "target": "models.ExtendType(扩展表)",
      "relationType": "包含"
    },
    {
      "source": "02-定义范式与方法",
      "target": "01-开发范式",
      "relationType": "包含"
    },
    {
      "source": "02-定义范式与方法",
      "target": "02-实现方法",
      "relationType": "包含"
    },
    {
      "source": "01-理论层",
      "target": "02-定义范式与方法",
      "relationType": "包含"
    },
    {
      "source": "01-背景",
      "target": "05-机制设计",
      "relationType": "包含"
    },
    {
      "source": "01-数据库支持",
      "target": "databases.DmdbType(达梦)",
      "relationType": "包含"
    },
    {
      "source": "01-数据库支持",
      "target": "databases.BuiltinsType(内置)",
      "relationType": "包含"
    },
    {
      "source": "操作类组件",
      "target": "components.GenericFilter(通用筛选器)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.QywxProxyType(企业微信代开发登录)",
      "relationType": "包含"
    },
    {
      "source": "操作类组件",
      "target": "components.Payment(支付)",
      "relationType": "包含"
    },
    {
      "source": "布局类组件",
      "target": "components.Modal(弹窗)",
      "relationType": "包含"
    },
    {
      "source": "布局类组件",
      "target": "components.Tab(标签页)",
      "relationType": "包含"
    },
    {
      "source": "03-数据模型",
      "target": "models.NormalType(数据表)",
      "relationType": "包含"
    },
    {
      "source": "JitWeb",
      "target": "widgets.React(自定义控件)",
      "relationType": "包含"
    },
    {
      "source": "操作类组件",
      "target": "components.Filter(模型筛选器)",
      "relationType": "包含"
    },
    {
      "source": "操作类组件",
      "target": "components.Button(按钮)",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "03-制造业通用模板",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.CascadeTree(级联树)",
      "relationType": "包含"
    },
    {
      "source": "01-理论层",
      "target": "03-能力表现",
      "relationType": "包含"
    },
    {
      "source": "企业组织",
      "target": "corps.QywxInnerType(企业微信)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.WechatPublicType(微信公众号登录)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.WeChatMiniType(微信小程序登录)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.GitHubType(GitHub登录)",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.GoogleType(谷歌登录)",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "04-汽车零配件行业案例",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Radio(选项组单选)",
      "relationType": "包含"
    },
    {
      "source": "02-架构原理",
      "target": "01-矩阵型元架构",
      "relationType": "包含"
    },
    {
      "source": "04-数据操作",
      "target": "Q表达式",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "页面编辑器",
      "relationType": "包含"
    },
    {
      "source": "02-架构层",
      "target": "02-架构原理",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.RichText(富文本)",
      "relationType": "包含"
    },
    {
      "source": "操作类组件",
      "target": "components.DataCheck(数据修正)",
      "relationType": "包含"
    },
    {
      "source": "01-理论层",
      "target": "02-架构层",
      "relationType": "指导"
    },
    {
      "source": "Environ运行环境",
      "target": "AppCode源码管理器",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "05-生物医药行业案例",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Transpose(行转列)",
      "relationType": "包含"
    },
    {
      "source": "04-数据操作",
      "target": "TQL数据操作语言",
      "relationType": "包含"
    },
    {
      "source": "01-工具平台",
      "target": "01-应用运行平台",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "表单编辑器",
      "relationType": "包含"
    },
    {
      "source": "AI大模型",
      "target": "llms.Bailian(百炼)",
      "relationType": "包含"
    },
    {
      "source": "门户",
      "target": "shells.BlankType(空白门户)",
      "relationType": "包含"
    },
    {
      "source": "关联数据类型",
      "target": "datatypes.RelateData(关联数据单选)",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "06-电子制造行业案例",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.Serial(流水号)",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "07-食品加工行业案例",
      "relationType": "包含"
    },
    {
      "source": "登录认证",
      "target": "auths.loginTypes.DDInnerType(钉钉自建扫码登录)",
      "relationType": "包含"
    },
    {
      "source": "02-数据类型",
      "target": "基础字段类型",
      "relationType": "包含"
    },
    {
      "source": "02-数据类型",
      "target": "选择器类型",
      "relationType": "包含"
    },
    {
      "source": "02-数据类型",
      "target": "附件类型",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "表格编辑器",
      "relationType": "包含"
    },
    {
      "source": "03-制造业通用模板",
      "target": "06-电子制造行业案例",
      "relationType": "继承"
    },
    {
      "source": "02-数据类型",
      "target": "特殊字段类型",
      "relationType": "包含"
    },
    {
      "source": "01-应用运行平台",
      "target": "运行时对象",
      "relationType": "包含"
    },
    {
      "source": "03-制造业通用模板",
      "target": "07-食品加工行业案例",
      "relationType": "继承"
    },
    {
      "source": "03-制造业通用模板",
      "target": "08-设备制造行业案例",
      "relationType": "继承"
    },
    {
      "source": "组件",
      "target": "操作类组件",
      "relationType": "包含"
    },
    {
      "source": "04-综合案例",
      "target": "08-设备制造行业案例",
      "relationType": "包含"
    },
    {
      "source": "JitWeb",
      "target": "门户",
      "relationType": "包含"
    },
    {
      "source": "03-能力表现",
      "target": "01-技术侧能力表现",
      "relationType": "包含"
    },
    {
      "source": "企业组织",
      "target": "corps.DDInnerType(钉钉)",
      "relationType": "包含"
    },
    {
      "source": "组件",
      "target": "布局类组件",
      "relationType": "包含"
    },
    {
      "source": "JitAi",
      "target": "AI大模型",
      "relationType": "包含"
    },
    {
      "source": "01-应用运行平台",
      "target": "运行引擎",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitAi",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitORM",
      "relationType": "包含"
    },
    {
      "source": "表单类组件",
      "target": "components.Form(表单)",
      "relationType": "包含"
    },
    {
      "source": "组件",
      "target": "审批类组件",
      "relationType": "包含"
    },
    {
      "source": "表单类组件",
      "target": "components.EditForm(批量编辑表单)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.MultiRadio(选项组多选)",
      "relationType": "包含"
    },
    {
      "source": "关联数据类型",
      "target": "datatypes.MultiRelateData(关联数据多选)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Date(日期)",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitAuth",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitWeb",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitService",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Import(导入)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.GroupTable(分组表)",
      "relationType": "包含"
    },
    {
      "source": "组件",
      "target": "视图类组件",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.ParseData(解析Excel)",
      "relationType": "包含"
    },
    {
      "source": "JitAuth",
      "target": "请求拦截器",
      "relationType": "包含"
    },
    {
      "source": "JitAuth",
      "target": "企业组织",
      "relationType": "包含"
    },
    {
      "source": "门户",
      "target": "shells.DefaultType(标准门户)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.TimeLine(时间轴)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Calendar(日历)",
      "relationType": "包含"
    },
    {
      "source": "门户",
      "target": "shells.SSRType(SSR门户)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.MultiDropdown(下拉框多选)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Time(时间)",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "图表编辑器",
      "relationType": "包含"
    },
    {
      "source": "03-制造业通用模板",
      "target": "04-汽车零配件行业案例",
      "relationType": "继承"
    },
    {
      "source": "关联数据类型",
      "target": "datatypes.QFilter(筛选条件)",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "筛选器编辑器",
      "relationType": "包含"
    },
    {
      "source": "02-开发工具",
      "target": "数据模型编辑器",
      "relationType": "包含"
    },
    {
      "source": "页面",
      "target": "pages.GridPageType(标准页面)",
      "relationType": "包含"
    },
    {
      "source": "页面",
      "target": "pages.DataManagePageType(数据管理页面)",
      "relationType": "包含"
    },
    {
      "source": "页面",
      "target": "pages.FormPageType(数据录入页面)",
      "relationType": "包含"
    },
    {
      "source": "页面",
      "target": "pages.NormalType(全代码页面)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.GanttChart(甘特图)",
      "relationType": "包含"
    },
    {
      "source": "JitAuth",
      "target": "登录认证",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitMessage",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitPay",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitStorage",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitTask",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.DateRange(时间范围)",
      "relationType": "包含"
    },
    {
      "source": "JitAuth",
      "target": "角色管理",
      "relationType": "包含"
    },
    {
      "source": "页面",
      "target": "pages.VueType(Vue全代码页面)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Checkbox(检查框)",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.Member(成员单选)",
      "relationType": "包含"
    },
    {
      "source": "页面",
      "target": "pages.MarkdownPageType(Markdown页面)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Table(表格)",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitWorkflow",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitCommons",
      "relationType": "包含"
    },
    {
      "source": "02-开发框架",
      "target": "JitI18N",
      "relationType": "包含"
    },
    {
      "source": "选择器类型",
      "target": "datatypes.MultiMember(成员多选)",
      "relationType": "包含"
    },
    {
      "source": "02-架构原理",
      "target": "02-JAAP应用协议",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Gallery(画廊)",
      "relationType": "包含"
    },
    {
      "source": "数据容器类型",
      "target": "datatypes.JitDict(字典)",
      "relationType": "包含"
    },
    {
      "source": "数据容器类型",
      "target": "datatypes.JitList(列表)",
      "relationType": "包含"
    },
    {
      "source": "数据容器类型",
      "target": "datatypes.JitMap(映射)",
      "relationType": "包含"
    },
    {
      "source": "JitORM",
      "target": "01-数据库支持",
      "relationType": "包含"
    },
    {
      "source": "JitORM",
      "target": "02-数据类型",
      "relationType": "包含"
    },
    {
      "source": "02-JAAP应用协议",
      "target": "01-应用规范",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.CascadeTable(级联表)",
      "relationType": "包含"
    },
    {
      "source": "运行时对象",
      "target": "Node节点对象",
      "relationType": "包含"
    },
    {
      "source": "运行时对象",
      "target": "Environ运行环境",
      "relationType": "包含"
    },
    {
      "source": "Environ运行环境",
      "target": "前端App对象",
      "relationType": "包含"
    },
    {
      "source": "02-JAAP应用协议",
      "target": "02-元素规范",
      "relationType": "包含"
    },
    {
      "source": "02-架构层",
      "target": "02-生态价值",
      "relationType": "包含"
    },
    {
      "source": "02-生态价值",
      "target": "01-开发效率提升",
      "relationType": "包含"
    },
    {
      "source": "02-生态价值",
      "target": "02-生态协作模式",
      "relationType": "包含"
    },
    {
      "source": "04-应用层",
      "target": "01-快速入门",
      "relationType": "包含"
    },
    {
      "source": "04-应用层",
      "target": "02-开发指南",
      "relationType": "包含"
    },
    {
      "source": "04-应用层",
      "target": "03-最佳实践",
      "relationType": "包含"
    },
    {
      "source": "04-应用层",
      "target": "04-综合案例",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.Stext(单行文本)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.BlankComponent(全代码组件)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Tree(树形)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Carousel(轮播图)",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.Ltext(多行文本)",
      "relationType": "包含"
    },
    {
      "source": "基础字段类型",
      "target": "datatypes.Numeric(数字)",
      "relationType": "包含"
    },
    {
      "source": "01-数据库支持",
      "target": "databases.MySQLType(MySQL)",
      "relationType": "包含"
    },
    {
      "source": "布局类组件",
      "target": "components.Collapse(折叠面板)",
      "relationType": "包含"
    },
    {
      "source": "审批类组件",
      "target": "components.Apply(发起申请)",
      "relationType": "包含"
    },
    {
      "source": "审批类组件",
      "target": "components.TaskHandle(审批处理)",
      "relationType": "包含"
    },
    {
      "source": "JitWeb",
      "target": "themes.NormalType(主题)",
      "relationType": "包含"
    },
    {
      "source": "01-工具平台",
      "target": "02-开发工具",
      "relationType": "包含"
    },
    {
      "source": "JitWeb",
      "target": "页面",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Chart(统计图)",
      "relationType": "包含"
    },
    {
      "source": "01-数据库支持",
      "target": "databases.SqliteType(SQLite)",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.Board(看板)",
      "relationType": "包含"
    },
    {
      "source": "03-实现层",
      "target": "01-工具平台",
      "relationType": "包含"
    },
    {
      "source": "布局类组件",
      "target": "components.Container(子页面)",
      "relationType": "包含"
    },
    {
      "source": "JitWeb",
      "target": "组件",
      "relationType": "包含"
    },
    {
      "source": "03-制造业通用模板",
      "target": "05-生物医药行业案例",
      "relationType": "继承"
    },
    {
      "source": "01-工具平台",
      "target": "03-运维工具",
      "relationType": "包含"
    },
    {
      "source": "01-数据库支持",
      "target": "databases.PgSqlType(PgSql)",
      "relationType": "包含"
    },
    {
      "source": "01-数据库支持",
      "target": "databases.OracleType(Oracle)",
      "relationType": "包含"
    },
    {
      "source": "01-数据库支持",
      "target": "databases.SqlServerType(SQL Server)",
      "relationType": "包含"
    },
    {
      "source": "JitORM",
      "target": "03-数据模型",
      "relationType": "包含"
    },
    {
      "source": "视图类组件",
      "target": "components.List(列表)",
      "relationType": "包含"
    },
    {
      "source": "01-理论层",
      "target": "01-背景",
      "relationType": "包含"
    },
    {
      "source": "企业组织",
      "target": "corps.JitAppType(极态应用)",
      "relationType": "包含"
    },
    {
      "source": "企业组织",
      "target": "corps.QywxProxyType(企业微信代开发)",
      "relationType": "包含"
    },
    {
      "source": "请求拦截器",
      "target": "interceptors.Auths(身份认证拦截器)",
      "relationType": "包含"
    },
    {
      "source": "JitService",
      "target": "services.NormalType(业务服务)",
      "relationType": "包含"
    },
    {
      "source": "JitService",
      "target": "events.WorkflowType(审批事件)",
      "relationType": "包含"
    },
    {
      "source": "JitService",
      "target": "events.NormalType(自定义事件)",
      "relationType": "包含"
    },
    {
      "source": "JitService",
      "target": "events.ModelType(模型事件)",
      "relationType": "包含"
    },
    {
      "source": "JitService",
      "target": "apiAuths.NormalType(标准授权)",
      "relationType": "包含"
    },
    {
      "source": "JitStorage",
      "target": "fileTmpls.Meta(文件模板)",
      "relationType": "包含"
    },
    {
      "source": "JitService",
      "target": "externalAPIs.NormalType(外部API)",
      "relationType": "包含"
    },
    {
      "source": "storages.Meta(存储)",
      "target": "storages.DiskType(磁盘存储)",
      "relationType": "包含"
    },
    {
      "source": "externalAPIs.NormalType(外部API)",
      "target": "externalAPIs.OCRApi(OCR)",
      "relationType": "包含"
    },
    {
      "source": "JitStorage",
      "target": "storages.Meta(存储)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.UtilsServices(工具服务)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.TpMsgSvc(三方消息通知服务)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.DataHandleSvc(数据处理服务)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.OpenMsgSvc(开放消息服务)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.ErrCodeSvc(错误码服务)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.DynamicElementSvc(动态元素服务)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.AuthOapiSvc(认证开放API服务)",
      "relationType": "包含"
    },
    {
      "source": "services.NormalType(业务服务)",
      "target": "services.TpProcessSvc(第三方流程待办服务)",
      "relationType": "包含"
    },
    {
      "source": "JitStorage",
      "target": "caches.Meta(缓存)",
      "relationType": "包含"
    },
    {
      "source": "storages.Meta(存储)",
      "target": "storages.OssType(阿里云OSS)",
      "relationType": "包含"
    },
    {
      "source": "storages.Meta(存储)",
      "target": "storages.QiniuType(七牛云存储)",
      "relationType": "包含"
    },
    {
      "source": "storages.Meta(存储)",
      "target": "storages.MinioType(MinIO存储)",
      "relationType": "包含"
    },
    {
      "source": "storages.Meta(存储)",
      "target": "storages.EosType(EOS存储)",
      "relationType": "包含"
    },
    {
      "source": "fileTmpls.Meta(文件模板)",
      "target": "fileTmpls.WordType(Word模板)",
      "relationType": "包含"
    },
    {
      "source": "fileTmpls.Meta(文件模板)",
      "target": "fileTmpls.ExcelType(Excel模板)",
      "relationType": "包含"
    },
    {
      "source": "caches.Meta(缓存)",
      "target": "caches.RedisType(Redis缓存)",
      "relationType": "包含"
    },
    {
      "source": "caches.Meta(缓存)",
      "target": "caches.SqliteType(SQLite缓存)",
      "relationType": "包含"
    },
    {
      "source": "caches.Meta(缓存)",
      "target": "caches.BuiltinsType(内置缓存)",
      "relationType": "包含"
    },
    {
      "source": "caches.Meta(缓存)",
      "target": "caches.TongRDSType(TongRDS缓存)",
      "relationType": "包含"
    },
    {
      "source": "JitPay",
      "target": "pays.Meta(支付)",
      "relationType": "包含"
    },
    {
      "source": "JitPay",
      "target": "services.PaySvc(支付服务)",
      "relationType": "包含"
    },
    {
      "source": "pays.Meta(支付)",
      "target": "pays.WechatPayType(微信支付)",
      "relationType": "包含"
    },
    {
      "source": "pays.Meta(支付)",
      "target": "pays.AliPayType(支付宝支付)",
      "relationType": "包含"
    },
    {
      "source": "JitTask",
      "target": "tasks.NormalType(定时任务)",
      "relationType": "包含"
    },
    {
      "source": "JitTask",
      "target": "tasks.TemporaryType(临时任务)",
      "relationType": "包含"
    },
    {
      "source": "JitTask",
      "target": "tasks.DateFieldType(日期字段任务)",
      "relationType": "包含"
    },
    {
      "source": "JitTask",
      "target": "services.TaskSvc(任务服务)",
      "relationType": "包含"
    },
    {
      "source": "JitWorkflow",
      "target": "workflows.NormalType(标准审批)",
      "relationType": "包含"
    },
    {
      "source": "JitWorkflow",
      "target": "services.WorkflowSvc(审批服务)",
      "relationType": "包含"
    },
    {
      "source": "JitWorkflow",
      "target": "pages.WorkflowManage(审批流程管理页面)",
      "relationType": "包含"
    },
    {
      "source": "JitWorkflow",
      "target": "pages.Todo(待办中心)",
      "relationType": "包含"
    },
    {
      "source": "JitWorkflow",
      "target": "pages.Launch(发起审批)",
      "relationType": "包含"
    },
    {
      "source": "JitWorkflow",
      "target": "pages.Handle(审批处理)",
      "relationType": "包含"
    },
    {
      "source": "JitWorkflow",
      "target": "pages.Apply(发起申请)",
      "relationType": "包含"
    },
    {
      "source": "JitMessage",
      "target": "SMS.Meta(短信服务)",
      "relationType": "包含"
    },
    {
      "source": "SMS.Meta(短信服务)",
      "target": "SMS.Aliyun(阿里云短信)",
      "relationType": "包含"
    },
    {
      "source": "JitCommons",
      "target": "全局组件",
      "relationType": "包含"
    },
    {
      "source": "JitCommons",
      "target": "工作线程",
      "relationType": "包含"
    },
    {
      "source": "JitCommons",
      "target": "公共模块",
      "relationType": "包含"
    },
    {
      "source": "JitCommons",
      "target": "基础设施",
      "relationType": "包含"
    },
    {
      "source": "全局组件",
      "target": "globals.Meta(全局元素)",
      "relationType": "包含"
    },
    {
      "source": "全局组件",
      "target": "GlobalVar功能模块",
      "relationType": "包含"
    },
    {
      "source": "全局组件",
      "target": "Calc功能模块",
      "relationType": "包含"
    },
    {
      "source": "globals.Meta(全局元素)",
      "target": "globals.AppVar(应用变量)",
      "relationType": "包含"
    },
    {
      "source": "globals.Meta(全局元素)",
      "target": "globals.Sql(SQL公式)",
      "relationType": "包含"
    },
    {
      "source": "工作线程",
      "target": "workers.WebWorker(WebWorker)",
      "relationType": "包含"
    },
    {
      "source": "公共模块",
      "target": "modules.BackendType(后端公共模块)",
      "relationType": "包含"
    },
    {
      "source": "公共模块",
      "target": "modules.FrontType(前端公共模块)",
      "relationType": "包含"
    },
    {
      "source": "公共模块",
      "target": "功能模块集合",
      "relationType": "包含"
    },
    {
      "source": "基础设施",
      "target": "枚举定义系统",
      "relationType": "包含"
    },
    {
      "source": "基础设施",
      "target": "错误码管理系统",
      "relationType": "包含"
    },
    {
      "source": "基础设施",
      "target": "常量定义系统",
      "relationType": "包含"
    },
    {
      "source": "基础设施",
      "target": "默认配置管理",
      "relationType": "包含"
    }
  ]
}